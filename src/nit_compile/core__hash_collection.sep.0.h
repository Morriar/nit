#include "nit.common.h"
val* NEW_core__HashSet(const struct type* type);
#define COLOR_core__HashSet__core__Set___35dE 10
void core___core__HashSet___core__kernel__Object__init(val* self);
#define COLOR_core__kernel__Object___61d_61d 3
#define COLOR_core__kernel__Object__hash 6
#define COLOR_core__hash_collection__HashCollection___capacity 1
extern const struct type type_core__Int;
extern const char FILE_core__kernel[];
#define COLOR_core__hash_collection__HashCollection___the_length 2
#define COLOR_core__hash_collection__HashCollection___last_accessed_key 5
#define COLOR_core__hash_collection__HashCollection___last_accessed_node 6
#define COLOR_core__hash_collection__HashCollection__index_at 37
#define COLOR_core__hash_collection__HashCollection__node_at_idx 38
#define COLOR_core__hash_collection__HashCollection___array 0
extern const char FILE_core__hash_collection[];
#define COLOR_core__hash_collection__HashNode___key 0
#define COLOR_core__hash_collection__HashNode___next_in_bucklet 4
#define COLOR_nullable__core__hash_collection__HashCollection__N 6
#define COLOR_core__hash_collection__HashCollection__N 7
#define COLOR_core__hash_collection__HashCollection___first_item 3
#define COLOR_core__hash_collection__HashCollection___last_item 4
#define COLOR_core__hash_collection__HashNode___next_item 1
#define COLOR_core__hash_collection__HashNode___prev_item 2
#define COLOR_core__NativeArray___35dE 0
extern const char FILE_core__array[];
#define COLOR_core__hash_collection__HashNode___prev_in_bucklet 3
void core__hash_collection___core__hash_collection__HashCollection___enlarge(val* self, long p0);
val* NEW_core__NativeArray(int length, const struct type* type);
#define COLOR_core__NativeArray__nullable__core__hash_collection__HashCollection__N 8
#define COLOR_core__hash_collection__HashNode___35dK 1
#define COLOR_core__hash_collection___core__hash_collection__HashNode___core__kernel__Object__init 16
val* core__hash_collection___core__hash_collection__HashCollection___node_at(val* self, val* p0);
#define COLOR_core__abstract_collection__MapRead__provide_default_value 19
#define COLOR_core__hash_collection__HashMapNode___value 5
val* NEW_core__hash_collection__HashMapIterator(const struct type* type);
#define COLOR_core__hash_collection__HashMapIterator__core__HashMap___35dK__core__HashMap___35dV 0
#define COLOR_core__hash_collection__HashMapIterator__map_61d 20
#define COLOR_core__kernel__Object__init 0
#define COLOR_core__HashMap___35dK 1
#define COLOR_core__HashMap___35dV 2
val* NEW_core__hash_collection__HashMapNode(const struct type* type);
#define COLOR_core__hash_collection__HashMapNode__core__HashMap___35dK__core__HashMap___35dV 3
#define COLOR_core__hash_collection__HashNode__key_61d 15
#define COLOR_core__hash_collection__HashMapNode__value_61d 17
void core__hash_collection___core__hash_collection__HashCollection___store(val* self, long p0, val* p1);
void core__hash_collection___core__hash_collection__HashCollection___raz(val* self);
#define COLOR_core___core__HashMap___core__kernel__Object__init 22
#define COLOR_core__hash_collection__HashMap___keys 7
val* NEW_core__hash_collection__HashMapKeys(const struct type* type);
#define COLOR_core__hash_collection__HashMapKeys__core__HashMap___35dK__core__HashMap___35dV 4
#define COLOR_core__hash_collection__HashMapKeys__map_61d 15
#define COLOR_core__hash_collection__HashMap___values 9
val* NEW_core__hash_collection__HashMapValues(const struct type* type);
#define COLOR_core__hash_collection__HashMapValues__core__HashMap___35dK__core__HashMap___35dV 5
#define COLOR_core__hash_collection__HashMapValues__map_61d 15
#define COLOR_core__hash_collection__HashMapKeys___map 0
#define COLOR_core__HashMap__core__hash_collection__HashMapKeys___35dK__core__hash_collection__HashMapKeys___35dV 0
short int core__hash_collection___core__hash_collection__HashMapKeys___core__abstract_collection__Collection__has(val* self, val* p0);
short int core___core__HashMap___core__abstract_collection__MapRead__is_empty(val* self);
long core___core__HashMap___core__abstract_collection__MapRead__length(val* self);
val* NEW_core__MapKeysIterator(const struct type* type);
#define COLOR_core__MapKeysIterator__core__hash_collection__HashMapKeys___35dK__core__hash_collection__HashMapKeys___35dV 1
val* core___core__HashMap___core__abstract_collection__MapRead__iterator(val* self);
#define COLOR_core__abstract_collection__MapKeysIterator__original_iterator_61d 21
void core___core__HashMap___core__abstract_collection__Map__clear(val* self);
void core__hash_collection___core__hash_collection__HashCollection___remove_node(val* self, val* p0);
#define COLOR_core__hash_collection___core__hash_collection__HashMapKeys___core__kernel__Object__init 17
#define COLOR_core__hash_collection__HashMapValues___map 0
#define COLOR_core__HashMap__core__hash_collection__HashMapValues___35dK__core__hash_collection__HashMapValues___35dV 0
val* NEW_core__MapValuesIterator(const struct type* type);
#define COLOR_core__MapValuesIterator__core__hash_collection__HashMapValues___35dK__core__hash_collection__HashMapValues___35dV 1
#define COLOR_core__abstract_collection__MapValuesIterator__original_iterator_61d 21
#define COLOR_core__hash_collection___core__hash_collection__HashMapValues___core__kernel__Object__init 17
#define COLOR_core__hash_collection__HashMapNode___35dV 0
#define COLOR_core__hash_collection___core__hash_collection__HashMapNode___core__kernel__Object__init 18
#define COLOR_core__hash_collection__HashMapIterator___node 1
short int core__hash_collection___core__hash_collection__HashMapIterator___core__abstract_collection__MapIterator__is_ok(val* self);
#define COLOR_core__hash_collection__HashMapIterator___map 0
#define COLOR_core__HashMap__core__hash_collection__HashMapIterator___35dK__core__hash_collection__HashMapIterator___35dV 0
#define COLOR_core__hash_collection___core__hash_collection__HashMapIterator___core__kernel__Object__init 22
#define COLOR_core__HashSet___35dE 0
long core__hash_collection___core__hash_collection__HashCollection___index_at(val* self, val* p0);
val* core__hash_collection___core__hash_collection__HashCollection___node_at_idx(val* self, long p0, val* p1);
val* NEW_core__hash_collection__HashSetNode(const struct type* type);
#define COLOR_core__hash_collection__HashSetNode__core__HashSet___35dE 1
val* NEW_core__hash_collection__HashSetIterator(const struct type* type);
#define COLOR_core__hash_collection__HashSetIterator__core__HashSet___35dE 2
#define COLOR_core__hash_collection__HashSetIterator__set_61d 21
#define COLOR_core___core__HashSet___core__kernel__Object__init 19
#define COLOR_core__Collection__core__HashSet___35dE 3
void core___core__SimpleCollection___add_all(val* self, val* p0);
#define COLOR_core__HashSet__core__HashSet___35dE 4
#define COLOR_core__hash_collection__HashSetIterator___node 1
short int core__hash_collection___core__hash_collection__HashSetIterator___core__abstract_collection__Iterator__is_ok(val* self);
#define COLOR_core__HashSet__core__hash_collection__HashSetIterator___35dE 1
#define COLOR_core__hash_collection__HashSetIterator___set 0
#define COLOR_core__hash_collection___core__hash_collection__HashSetIterator___core__kernel__Object__init 22
