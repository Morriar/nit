#include "nit.common.h"
extern const char FILE_core__abstract_text[];
extern const int COLOR_core__abstract_text__Text__length;
extern const int COLOR_core__abstract_text__Text__chars;
extern const int COLOR_core__abstract_collection__SequenceRead___91d_93d;
extern const int COLOR_core__abstract_text__Text__index_of_from;
extern const struct type type_core__Int;
extern const char FILE_core__kernel[];
extern const int COLOR_core__abstract_collection__SequenceRead__iterator_from;
extern const int COLOR_core__abstract_collection__Iterator__is_ok;
extern const int COLOR_core__abstract_collection__Iterator__item;
extern const int COLOR_core__abstract_collection__IndexedIterator__index;
extern const int COLOR_core__abstract_collection__Iterator__next;
extern const int COLOR_core__abstract_text__Text__last_index_of_from;
extern const int COLOR_core__abstract_collection__SequenceRead__last_index_of_from;
extern const int COLOR_core__abstract_collection__Collection__iterator;
extern const int COLOR_core__array__Collection__to_a;
extern const int COLOR_core__abstract_text__Text__empty;
extern const int COLOR_core__abstract_text__Text__substring;
extern const int COLOR_core__abstract_text__Text__is_empty;
extern const int COLOR_core__abstract_text__Text__has_substring;
extern const int COLOR_core__abstract_text__Object__to_s;
extern const int COLOR_core__abstract_text__Text__to_cstring;
double core___core__CString___atof(char* self);
extern const int COLOR_core__abstract_text__Text___91d_93d;
long core__abstract_text___Char___from_hex(uint32_t self);
long core___core__Int___Discrete__successor(long self, long p0);
extern const int COLOR_core__abstract_text__Text__a_to;
long core___core__Char___to_i(uint32_t self);
short int core__abstract_text___Char___is_numeric(uint32_t self);
extern const struct type type_core__Char;
extern const int COLOR_core__abstract_collection__Iterator__finish;
short int core___core__Char___is_lower(uint32_t self);
short int core___core__Char___is_upper(uint32_t self);
short int core___core__Char___is_whitespace(uint32_t self);
extern const int COLOR_core__abstract_text__Text__substring_from;
extern const int COLOR_core__abstract_collection__SequenceRead__reverse_iterator;
extern const int COLOR_core__abstract_text__Text__l_trim;
extern const int COLOR_core__abstract_text__Text__r_trim;
extern const int COLOR_core__abstract_text__Text__SELFTYPE;
extern const int COLOR_core__abstract_collection__SequenceRead__last;
val* core__abstract_text___Char___Object__to_s(uint32_t self);
extern const struct type type_core__Float;
extern const int COLOR_core__abstract_text__Text___42d;
extern const int COLOR_core__abstract_text__Text___43d;
val* core__flat___CString___to_s_unsafe(char* self, val* p0, val* p1, val* p2, val* p3);
val* NEW_core__Buffer(const struct type* type);
extern const struct type type_core__Buffer;
extern const int COLOR_core__abstract_text__Buffer__new;
extern const int COLOR_core__abstract_text__Buffer__add;
val* core__flat___Int___core__abstract_text__Object__to_s(long self);
extern const int COLOR_core__abstract_text__Buffer__append;
val* core__abstract_text___Int___to_base(long self, long p0);
extern const int COLOR_core__abstract_text__Text__escape_to_c;
extern const int COLOR_core__abstract_collection__Collection__has;
extern const int COLOR_core__abstract_text__Text__escape_more_to_c;
extern const int COLOR_core__abstract_collection__SimpleCollection__add;
val* NEW_core__NativeArray(int length, const struct type* type);
extern const struct type type_core__NativeArray__core__String;
extern const int COLOR_core__abstract_text__NativeArray__native_to_s;
extern const int COLOR_core__abstract_text__Buffer__with_cap;
val* core__abstract_text___Char___escape_to_utf16(uint32_t self);
extern const int COLOR_core__abstract_text__Text__from_utf16_digit;
extern const struct type type_core__UInt32;
extern const char FILE_core__fixed_ints[];
uint32_t core__native___UInt32___code_point(uint32_t self);
uint32_t core__native___UInt32___from_utf16_surr(uint32_t self);
extern const int COLOR_core__abstract_text__Text__to_hex;
extern const int COLOR_core__abstract_text__Text__bytes;
val* core__abstract_text___Int___to_hex(long self);
extern const int COLOR_core__abstract_text__Text__byte_length;
unsigned char core___core__Char___ascii(uint32_t self);
extern const int COLOR_core__abstract_text__Text__is_hex;
extern const int COLOR_core__kernel__Object___61d_61d;
extern const struct type type_core__Text;
extern const int COLOR_core__kernel__Comparable__OTHER;
extern const int COLOR_core__abstract_text__Text___hash_cache;
extern const int COLOR_core__abstract_text__Text__hash_cache;
extern const int COLOR_core__abstract_text__Text__hash_cache_61d;
val* NEW_core__Array(const struct type* type);
extern const struct type type_core__Array__core__Text;
extern const int COLOR_core__kernel__Object__init;
extern const int COLOR_core__abstract_collection__Sequence__push;
extern const int COLOR_core__abstract_text__Text__to_i;
extern const int COLOR_core__abstract_collection__Collection__length;
extern const int COLOR_core__abstract_text__Collection__plain_to_s;
extern const struct type type_core__Array__core__Int;
extern const int COLOR_core__array__Array__with_capacity;
extern const int COLOR_core__abstract_collection__Sequence___91d_93d_61d;
long core___core__Int___Comparable__min(long self, long p0);
extern const int COLOR_core__array__AbstractArrayRead__reversed;
extern const int COLOR_core__abstract_text__Buffer__capitalize;
extern const int COLOR_core__abstract_text__FlatText___items;
extern const int COLOR_core__abstract_text__FlatText___length;
extern const int COLOR_core__abstract_text__FlatText___byte_length;
extern const int COLOR_core__abstract_text__FlatText__items;
extern const int COLOR_core__abstract_text__StringCharView___target;
extern const int COLOR_core__abstract_text__StringCharView__SELFTYPE;
extern const int COLOR_core__abstract_text__StringCharView__target;
extern const int COLOR_core__abstract_collection__SequenceRead__reverse_iterator_from;
extern const int COLOR_core__abstract_text___core__abstract_text__StringCharView___core__kernel__Object__init;
extern const int COLOR_core__abstract_text__StringByteView___target;
extern const int COLOR_core__abstract_text__StringByteView__SELFTYPE;
extern const int COLOR_core__abstract_text__StringByteView__target;
extern const int COLOR_core__abstract_text___core__abstract_text__StringByteView___core__kernel__Object__init;
extern const int COLOR_core__kernel__Object__SELF;
extern const int COLOR_core__abstract_text__Buffer__from_text;
extern const int COLOR_core__abstract_text__Text__is_upper;
extern const int COLOR_core__abstract_text__Buffer__camel_case;
extern const int COLOR_core__abstract_text__Text__is_lower;
extern const int COLOR_core__abstract_text__Buffer__snake_case;
extern const int COLOR_core__abstract_text__Buffer___written;
extern const int COLOR_core__kernel__Cloneable__clone;
uint32_t core___core__Char___to_upper(uint32_t self);
extern const int COLOR_core__abstract_text__Buffer___91d_93d_61d;
short int core___core__Char___is_letter(uint32_t self);
uint32_t core___core__Char___to_lower(uint32_t self);
extern const int COLOR_core__abstract_text__Buffer__append_substring_impl;
extern const int COLOR_core__abstract_text__Buffer__append_substring;
extern const int COLOR_core__abstract_text__Buffer__reverse;
extern const int COLOR_core__abstract_text__Buffer__upper;
extern const int COLOR_core__abstract_text__Buffer__lower;
extern const int COLOR_core__abstract_text__Buffer__insert_char;
extern const int COLOR_core__abstract_text__Buffer__remove_at;
extern const int COLOR_core__abstract_text__Object__inspect;
val* core__flat___CString___core__abstract_text__Object__to_s(char* self);
extern const int COLOR_core__abstract_text__Object__inspect_head;
extern const int COLOR_core__abstract_text__Object__class_name;
extern const int COLOR_core__kernel__Object__object_id;
val* core__abstract_text___Bool___Object__to_s(short int self);
long core__abstract_text___Byte_byte_to_s_len___impl( unsigned char self );
void core__abstract_text___Byte_native_byte_to_s___impl( unsigned char self, char* nstr, long strlen );
long core__abstract_text___Byte___byte_to_s_len(unsigned char self);
void core__abstract_text___Byte___native_byte_to_s(unsigned char self, char* p0, long p1);
val* core__abstract_text___Byte___Object__to_s(unsigned char self);
char* core__abstract_text___Int_strerror_ext___impl( long self );
char* core__abstract_text___Int___strerror_ext(long self);
long core___core__Int___digit_count(long self, long p0);
uint32_t core___core__Int___to_c(long self);
long core__abstract_text___Int_int_to_s_len___impl( long self );
void core__abstract_text___Int_native_int_to_s___impl( long self, char* nstr, long strlen );
extern const int COLOR_core__abstract_text__Buffer__enlarge;
void core__abstract_text___Int___fill_buffer(long self, val* p0, long p1);
val* core__abstract_text___Float___to_precision(double self, long p0);
long core__math___Float___is_inf(double self);
short int core__math___Float___is_nan(double self);
val* core__abstract_text___Float___Object__to_s(double self);
long core___core__Int___abs(long self);
long core__abstract_text___Char___u8char_len(uint32_t self);
void core__abstract_text___Char___u8char_tos(uint32_t self, char* p0, long p1);
extern const int COLOR_core__abstract_collection__Iterator__iterator;
extern const int COLOR_core__abstract_text__Text__iterator;
void core__abstract_text___Char_u8char_tos___impl( uint32_t self, char* r, long len );
short int core__abstract_text___Char___is_alpha(uint32_t self);
short int core__abstract_text___Char___is_hexdigit(uint32_t self);
extern const int COLOR_core__abstract_text__Collection__join;
extern const int COLOR_core__kernel__Object___33d_61d;
extern const int COLOR_core__abstract_collection__Collection__is_empty;
extern const int COLOR_core__abstract_text__Sys___args_cache;
extern const int COLOR_core__abstract_text__Sys__init_args;
extern const struct type type_core__Array__core__String;
val* NEW_core__abstract_text__AlphaComparator(const struct type* type);
extern const struct type type_core__abstract_text__AlphaComparator;
extern const int COLOR_core__abstract_text__Sys__program_args;
extern const int COLOR_core__abstract_text__CachedAlphaComparator___cache;
extern const int COLOR_core__abstract_text__CachedAlphaComparator__cache;
extern const int COLOR_core__abstract_collection__MapRead__has_key;
extern const int COLOR_core__abstract_collection__MapRead___91d_93d;
extern const int COLOR_core__abstract_collection__Map___91d_93d_61d;
extern const int COLOR_core__sorter__Comparator__COMPARED;
extern const int COLOR_core__abstract_text__CachedAlphaComparator__do_to_s;
extern const int COLOR_core__kernel__Comparable___60d_61d_62d;
extern const struct type type_core__CString;
extern const int COLOR_core__abstract_text__Text__copy_to_native;
