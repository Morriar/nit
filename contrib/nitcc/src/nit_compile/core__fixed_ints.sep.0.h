#include "nit.common.h"
extern const int COLOR_core__kernel__Numeric__to_i;
extern const struct type type_core__Int8;
extern const char FILE_core__fixed_ints[];
int8_t core___core__Int8___core__kernel__Discrete__successor(int8_t self, long p0);
val* BOX_core__Int8(int8_t);
int8_t core___core__Int8___core__kernel__Discrete__predecessor(int8_t self, long p0);
long core___core__Int8___core__kernel__Object__hash(int8_t self);
extern const struct class class_core__Int8;
extern const int COLOR_core__kernel__Comparable__OTHER;
int8_t core___core__Int8___core__kernel__Numeric__zero(int8_t self);
extern const int COLOR_core__fixed_ints__Numeric__to_i8;
int8_t core___core__Int8___core__kernel__Numeric__value_of(int8_t self, val* p0);
int8_t core___core__Int8___Numeric__to_i8(int8_t self);
uint32_t core__fixed_ints___Int8_ascii___impl( int8_t self );
long core___core__Int8___core__kernel__Discrete__distance(int8_t self, int8_t p0);
long core___core__Int8___core__kernel__Comparable___60d_61d_62d(int8_t self, int8_t p0);
short int core___core__Int8___core__kernel__Comparable__is_between(int8_t self, int8_t p0, int8_t p1);
int8_t core___core__Int8___core__kernel__Comparable__max(int8_t self, int8_t p0);
int8_t core___core__Int8___core__kernel__Comparable__min(int8_t self, int8_t p0);
extern const struct type type_core__Int16;
int16_t core___core__Int16___core__kernel__Discrete__successor(int16_t self, long p0);
val* BOX_core__Int16(int16_t);
int16_t core___core__Int16___core__kernel__Discrete__predecessor(int16_t self, long p0);
long core___core__Int16___core__kernel__Object__hash(int16_t self);
extern const struct class class_core__Int16;
uint32_t core__fixed_ints___Int16_ascii___impl( int16_t self );
int16_t core___core__Int16___core__kernel__Numeric__zero(int16_t self);
extern const int COLOR_core__fixed_ints__Numeric__to_i16;
int16_t core___core__Int16___core__kernel__Numeric__value_of(int16_t self, val* p0);
int16_t core___core__Int16___Numeric__to_i16(int16_t self);
long core___core__Int16___core__kernel__Discrete__distance(int16_t self, int16_t p0);
long core___core__Int16___core__kernel__Comparable___60d_61d_62d(int16_t self, int16_t p0);
short int core___core__Int16___core__kernel__Comparable__is_between(int16_t self, int16_t p0, int16_t p1);
int16_t core___core__Int16___core__kernel__Comparable__max(int16_t self, int16_t p0);
int16_t core___core__Int16___core__kernel__Comparable__min(int16_t self, int16_t p0);
extern const struct type type_core__UInt16;
uint16_t core___core__UInt16___core__kernel__Discrete__successor(uint16_t self, long p0);
val* BOX_core__UInt16(uint16_t);
uint16_t core___core__UInt16___core__kernel__Discrete__predecessor(uint16_t self, long p0);
long core___core__UInt16___core__kernel__Object__hash(uint16_t self);
extern const struct class class_core__UInt16;
uint16_t core___core__UInt16___core__kernel__Numeric__zero(uint16_t self);
extern const int COLOR_core__fixed_ints__Numeric__to_u16;
uint16_t core___core__UInt16___core__kernel__Numeric__value_of(uint16_t self, val* p0);
uint32_t core__fixed_ints___UInt16_ascii___impl( uint16_t self );
uint16_t core___core__UInt16___Numeric__to_u16(uint16_t self);
long core___core__UInt16___core__kernel__Discrete__distance(uint16_t self, uint16_t p0);
long core___core__UInt16___core__kernel__Comparable___60d_61d_62d(uint16_t self, uint16_t p0);
short int core___core__UInt16___core__kernel__Comparable__is_between(uint16_t self, uint16_t p0, uint16_t p1);
uint16_t core___core__UInt16___core__kernel__Comparable__max(uint16_t self, uint16_t p0);
uint16_t core___core__UInt16___core__kernel__Comparable__min(uint16_t self, uint16_t p0);
extern const struct type type_core__Int32;
int32_t core___core__Int32___core__kernel__Discrete__successor(int32_t self, long p0);
val* BOX_core__Int32(int32_t);
int32_t core___core__Int32___core__kernel__Discrete__predecessor(int32_t self, long p0);
long core___core__Int32___core__kernel__Object__hash(int32_t self);
extern const struct class class_core__Int32;
uint32_t core__fixed_ints___Int32_ascii___impl( int32_t self );
int32_t core___core__Int32___core__kernel__Numeric__zero(int32_t self);
extern const int COLOR_core__fixed_ints__Numeric__to_i32;
int32_t core___core__Int32___core__kernel__Numeric__value_of(int32_t self, val* p0);
int32_t core___core__Int32___Numeric__to_i32(int32_t self);
long core___core__Int32___core__kernel__Discrete__distance(int32_t self, int32_t p0);
long core___core__Int32___core__kernel__Comparable___60d_61d_62d(int32_t self, int32_t p0);
short int core___core__Int32___core__kernel__Comparable__is_between(int32_t self, int32_t p0, int32_t p1);
int32_t core___core__Int32___core__kernel__Comparable__max(int32_t self, int32_t p0);
int32_t core___core__Int32___core__kernel__Comparable__min(int32_t self, int32_t p0);
extern const struct type type_core__UInt32;
uint32_t core___core__UInt32___core__kernel__Discrete__successor(uint32_t self, long p0);
val* BOX_core__UInt32(uint32_t);
uint32_t core___core__UInt32___core__kernel__Discrete__predecessor(uint32_t self, long p0);
long core___core__UInt32___core__kernel__Object__hash(uint32_t self);
extern const struct class class_core__UInt32;
uint32_t core__fixed_ints___UInt32_ascii___impl( uint32_t self );
uint32_t core___core__UInt32___core__kernel__Numeric__zero(uint32_t self);
extern const int COLOR_core__fixed_ints__Numeric__to_u32;
uint32_t core___core__UInt32___core__kernel__Numeric__value_of(uint32_t self, val* p0);
uint32_t core___core__UInt32___Numeric__to_u32(uint32_t self);
long core___core__UInt32___core__kernel__Discrete__distance(uint32_t self, uint32_t p0);
long core___core__UInt32___core__kernel__Comparable___60d_61d_62d(uint32_t self, uint32_t p0);
short int core___core__UInt32___core__kernel__Comparable__is_between(uint32_t self, uint32_t p0, uint32_t p1);
uint32_t core___core__UInt32___core__kernel__Comparable__max(uint32_t self, uint32_t p0);
uint32_t core___core__UInt32___core__kernel__Comparable__min(uint32_t self, uint32_t p0);
