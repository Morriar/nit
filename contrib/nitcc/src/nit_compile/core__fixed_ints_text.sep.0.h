#include "nit.common.h"
long core__fixed_ints_text___Int8_to_s_len___impl( int8_t self );
void core__fixed_ints_text___Int8_native_to_s___impl( int8_t self, char* nstr, long strlen );
long core__fixed_ints_text___Int8___to_s_len(int8_t self);
extern const struct type type_core__Int;
extern const char FILE_core__kernel[];
void core__fixed_ints_text___Int8___native_to_s(int8_t self, char* p0, long p1);
val* core__flat___CString___to_s_unsafe(char* self, val* p0, val* p1, val* p2, val* p3);
val* core__fixed_ints_text___Int8___core__abstract_text__Object__to_s(int8_t self);
long core__fixed_ints_text___Int16_to_s_len___impl( int16_t self );
void core__fixed_ints_text___Int16_native_to_s___impl( int16_t self, char* nstr, long strlen );
long core__fixed_ints_text___Int16___to_s_len(int16_t self);
void core__fixed_ints_text___Int16___native_to_s(int16_t self, char* p0, long p1);
val* core__fixed_ints_text___Int16___core__abstract_text__Object__to_s(int16_t self);
long core__fixed_ints_text___UInt16_to_s_len___impl( uint16_t self );
void core__fixed_ints_text___UInt16_native_to_s___impl( uint16_t self, char* nstr, long strlen );
long core__fixed_ints_text___UInt16___to_s_len(uint16_t self);
void core__fixed_ints_text___UInt16___native_to_s(uint16_t self, char* p0, long p1);
val* core__fixed_ints_text___UInt16___core__abstract_text__Object__to_s(uint16_t self);
long core__fixed_ints_text___Int32_to_s_len___impl( int32_t self );
void core__fixed_ints_text___Int32_native_to_s___impl( int32_t self, char* nstr, long strlen );
long core__fixed_ints_text___Int32___to_s_len(int32_t self);
void core__fixed_ints_text___Int32___native_to_s(int32_t self, char* p0, long p1);
val* core__fixed_ints_text___Int32___core__abstract_text__Object__to_s(int32_t self);
long core__fixed_ints_text___UInt32_to_s_len___impl( uint32_t self );
void core__fixed_ints_text___UInt32_native_to_s___impl( uint32_t self, char* nstr, long strlen );
long core__fixed_ints_text___UInt32___to_s_len(uint32_t self);
void core__fixed_ints_text___UInt32___native_to_s(uint32_t self, char* p0, long p1);
val* core__fixed_ints_text___UInt32___core__abstract_text__Object__to_s(uint32_t self);
extern const int COLOR_core__fixed_ints_text__Text__get_numhead;
extern const int COLOR_core__kernel__Object___33d_61d;
extern const int COLOR_core__abstract_text__Text__substring_from;
extern const int COLOR_core__abstract_text__Text__length;
extern const int COLOR_core__abstract_text__Text___91d_93d;
extern const int COLOR_core__abstract_text__Text__substring;
extern const int COLOR_core__fixed_ints_text__Text__get_numext;
long core___core__Int___Discrete__successor(long self, long p0);
extern const int COLOR_core__abstract_text__Text__byte_length;
extern const int COLOR_core__string_search__Text__remove_all;
extern const int COLOR_core__fixed_ints_text__Text__strip_numhead;
extern const int COLOR_core__kernel__Object___61d_61d;
extern const int COLOR_core__abstract_text__Text__is_hex;
extern const int COLOR_core__abstract_text__Text__is_bin;
extern const int COLOR_core__abstract_text__Text__is_oct;
extern const int COLOR_core__abstract_text__Text__is_dec;
extern const int COLOR_core__fixed_ints_text__Text__is_int;
extern const char FILE_core__fixed_ints_text[];
extern const int COLOR_core__abstract_text__Text__to_hex;
extern const int COLOR_core__abstract_text__Text__to_oct;
extern const int COLOR_core__abstract_text__Text__to_bin;
short int core__abstract_text___Char___is_numeric(uint32_t self);
extern const int COLOR_core__abstract_text__Text__to_dec;
extern const int COLOR_core__fixed_ints_text__Text__strip_numext;
extern const int COLOR_core__fixed_ints_text__Text__is_num;
extern const int COLOR_core__abstract_text__Text__to_i;
val* BOX_core__Byte(unsigned char);
val* BOX_core__Int8(int8_t);
val* BOX_core__Int16(int16_t);
val* BOX_core__UInt16(uint16_t);
val* BOX_core__Int32(int32_t);
val* BOX_core__UInt32(uint32_t);
