#include "nit.common.h"
long core__math___Int_rand___impl( long self );
long core__math___Int__caret___impl( long self, long i );
long core__math___Int__unary_tilde___impl( long self );
long core__math___Int_sqrt___impl( long self );
extern const struct type type_core__Int;
extern const char FILE_core__kernel[];
long core__math___Int___gcd(long self, long p0);
short int core__math___Int___is_even(long self);
long core__math___Int___sqrt(long self);
long core___core__Int___Discrete__successor(long self, long p0);
double core__math___Float___pow(double self, double p0);
extern const char FILE_core__math[];
unsigned char core__math___Byte__pipe___impl( unsigned char self, unsigned char i );
unsigned char core__math___Byte__caret___impl( unsigned char self, unsigned char i );
unsigned char core__math___Byte__unary_tilde___impl( unsigned char self );
double core__math___Float_sqrt___impl( double self );
double core__math___Float_cos___impl( double self );
double core__math___Float_sin___impl( double self );
double core__math___Float_tan___impl( double self );
double core__math___Float_acos___impl( double self );
double core__math___Float_asin___impl( double self );
double core__math___Float_atan___impl( double self );
double core__math___Float_abs___impl( double self );
double core__math___Float_pow___impl( double self, double e );
double core__math___Float_log___impl( double self );
double core__math___Float___log(double self);
extern const struct type type_core__Float;
double core__math___Float_exp___impl( double self );
double core__math___Float_ceil___impl( double self );
double core__math___Float_floor___impl( double self );
double core__math___Float_round___impl( double self );
double core__math___Float_rand___impl( double self );
double core__math___Float_hypot_with___impl( double self, double b );
int core__math___Float_is_nan___impl( double self );
short int core__math___Float___native_is_inf(double self);
int core__math___Float_native_is_inf___impl( double self );
extern const int COLOR_core__kernel__Comparable__OTHER;
extern const int COLOR_core__kernel__Comparable__max;
extern const int COLOR_core__kernel__Comparable__min;
extern const int COLOR_core__abstract_collection__Collection__is_empty;
extern const int COLOR_core__abstract_collection__Collection__length;
long core__math___Int___rand(long self);
extern const int COLOR_core__abstract_collection__Collection__iterator;
extern const int COLOR_core__abstract_collection__Iterator__is_ok;
extern const int COLOR_core__abstract_collection__Iterator__item;
extern const int COLOR_core__abstract_collection__Iterator__next;
extern const int COLOR_core__abstract_collection__Iterator__finish;
extern const int COLOR_core__array__Collection__to_a;
extern const int COLOR_core__math__AbstractArray__shuffle;
extern const int COLOR_core__math__Collection__to_shuffle;
val* NEW_core__Array(const struct type* type);
extern const int COLOR_core__Array__core__Collection___35dE;
extern const int COLOR_core__array__Array__with_capacity;
extern const int COLOR_core__abstract_collection__Sequence___91d_93d_61d;
extern const int COLOR_core__abstract_collection__SequenceRead___91d_93d;
extern const int COLOR_core__math___Sys___core__kernel__Object__init;
extern const int COLOR_core__math__Sys__srand;
double core__math___Sys_atan2___impl( struct nitni_instance * self, double y, double x );
void core__math___Sys_srand_from___impl( struct nitni_instance * self, long x );
void core__math___Sys_srand___impl( struct nitni_instance * self );
