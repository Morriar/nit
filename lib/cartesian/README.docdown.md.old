# `cartesian` - Memory-efficient Cartesian products on heterogeneous collections.

[[toc: cartesian]]

This module is a proof-of-concept to propose memory-efficient views on collections.

This is a specific alternative to `combinations`, that focuses only highly efficient
Cartesian products between collections of different types.

Collection[Int] X Collection[String] -> Collection[(Int,String)]

However, in Nit, there in no native *tuple* type.
So we need a first building block, a pair.

## `Cartesian` - A view of a Cartesian-product collection over two collections.

[[doc: cartesian::Cartesian | no-synopsis]]

Properties:

[[features: cartesian::Cartesian | min-visibility: public, no-redef]]

## Other classes from `cartesian`

[[features: cartesian::cartesian | mentities: cartesian::Pair;cartesian::CartesianIterator]]

## Authors

This project is maintained by [[ini-maintainer: cartesian]].
