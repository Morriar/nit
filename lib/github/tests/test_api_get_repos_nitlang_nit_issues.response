[{"url":"https://api.github.com/repos/nitlang/nit/issues/2752","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2752/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2752/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2752/events","html_url":"https://github.com/nitlang/nit/pull/2752","id":456568229,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjg4NTc2ODIx","number":2752,"title":"Follow the INI specification","user":{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-06-15T19:23:37Z","updated_at":"2019-06-15T19:33:47Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2752","html_url":"https://github.com/nitlang/nit/pull/2752","diff_url":"https://github.com/nitlang/nit/pull/2752.diff","patch_url":"https://github.com/nitlang/nit/pull/2752.patch"},"body":"This version follows more closely the INI specification (https://en.wikipedia.org/wiki/INI_file) and adds some improvements to the API.\r\n\r\nSpec changes:\r\n* Allow `#` and `;` for comments\r\n* No more sections nesting as by the spec (which actually change nothing see below)\r\n\r\nAPI changes:\r\n* Renaming `ConfigTree` -> `IniFile` (as it's no more a \"tree\")\r\n* No more coupling with a file path, use utility methods `load_string`, `load_file`, `write_to`  instead\r\n* Ability to iterate keys, values, sections and section content\r\n* Ability to create `IniSection` by hand\r\n* `IniFile` and `IniSection` implements `Map[String, nullable String]`\r\n\r\nThe biggest change is that sub-sections are now flattened.\r\n\r\nBefore, with the following ini:\r\n\r\n~~~ini\r\n[section1]\r\nkey1=value1\r\n[section1.section2]\r\nkey2=value2\r\n~~~\r\n\r\nYou would get this hierarchy:\r\n\r\n~~~\r\nsection1\r\n  |   key1=value1\r\n  `- section2\r\n      `-  key2=value2\r\n~~~\r\n\r\nNow you get:\r\n\r\n~~~\r\nsection1\r\n  `- key1=value1\r\nsection1.section2\r\n  `-  key2=value2\r\n~~~\r\n\r\nTwo independent (unnested) sections, one called `section1` and the other called `section1.section2`.\r\nThis actually change nothing if the client was using the `[]` operator with the `.` notation as:\r\n\r\n~~~\r\nini[\"section1.section2.key2\"] # still returns `value2`\r\n~~~\r\n\r\nDocumentation and specification from the README:\r\n\r\n# `ini` - Read and write INI configuration files\r\n\r\n[INI files](https://en.wikipedia.org/wiki/INI_file) are simple text files with\r\na basic structure composed of sections, properties and values used to store\r\nconfiguration parameters.\r\n\r\nHere's an example from the `package.ini` of this package:\r\n\r\n~~~nit\r\nimport ini\r\n\r\nvar package_ini = \"\"\"\r\n[package]\r\nname=ini\r\ndesc=Read and write INI configuration files.\r\n[upstream]\r\ngit=https://github.com/nitlang/nit.git\r\ngit.directory=lib/ini/\r\n\"\"\"\r\n~~~\r\n\r\n## Basic usage\r\n\r\n`IniFile` is used to parse INI strings and access their content:\r\n\r\n~~~nit\r\nvar ini = new IniFile.from_string(package_ini)\r\nassert ini[\"package.name\"] == \"ini\"\r\nassert ini[\"upstream.git.directory\"] == \"lib/ini/\"\r\nassert ini[\"unknown.unknown\"] == null\r\n~~~\r\n\r\n`IniFile` can also load INI configuration from a file:\r\n\r\n~~~nit\r\npackage_ini.write_to_file(\"my_package.ini\")\r\n\r\nini = new IniFile.from_file(\"my_package.ini\")\r\nassert ini[\"package.name\"] == \"ini\"\r\nassert ini[\"upstream.git.directory\"] == \"lib/ini/\"\r\n\r\n\"my_package.ini\".to_path.delete\r\n~~~\r\n\r\nINI content can be added or edited through the `IniFile` API then written to\r\na stream or a file.\r\n\r\n~~~nit\r\nini[\"package.name\"] = \"new name\"\r\nini[\"upstream.git.directory\"] = \"/dev/null\"\r\nini[\"section.key\"] = \"value\"\r\n\r\nvar stream = new StringWriter\r\nini.write_to(stream)\r\n\r\nassert stream.to_s == \"\"\"\r\n[package]\r\nname=new name\r\ndesc=Read and write INI configuration files.\r\n[upstream]\r\ngit=https://github.com/nitlang/nit.git\r\ngit.directory=/dev/null\r\n[section]\r\nkey=value\r\n\"\"\"\r\n~~~\r\n\r\n## INI content\r\n\r\n### Properties\r\n\r\nProperties are the basic element of the INI format.\r\nEvery property correspond to a *key* associated to a *value* thanks to the equal (`=`) sign.\r\n\r\n~~~nit\r\nini = new IniFile.from_string(\"\"\"\r\nkey1=value1\r\nkey2=value2\r\n\"\"\")\r\nassert ini[\"key1\"] == \"value1\"\r\nassert ini[\"key2\"] == \"value2\"\r\nassert ini.length == 2\r\n~~~\r\n\r\nAccessing an unknown property returns `null`:\r\n\r\n~~~nit\r\nassert ini[\"unknown\"] == null\r\n~~~\r\n\r\nProperties can be iterated over:\r\n\r\n~~~nit\r\nvar i = 1\r\nfor key, value in ini do\r\n\tassert key == \"key{i}\"\r\n\tassert value == \"value{i}\"\r\n\ti += 1\r\nend\r\n~~~\r\n\r\nProperty keys cannot contain the character `=`.\r\nValues can contain any character.\r\nSpaces are trimmed.\r\n\r\n~~~nit\r\nini = new IniFile.from_string(\"\"\"\r\nprop=erty1=value1\r\n property2 =  value2\r\nproperty3=value3 ; with semicolon\r\n\"\"\")\r\nassert ini[\";property1\"] == null\r\nassert ini[\"prop=erty1\"] == null\r\nassert ini[\"prop\"] == \"erty1=value1\"\r\nassert ini[\"property2\"] == \"value2\"\r\nassert ini[\" property2 \"] == \"value2\"\r\nassert ini[\"property3\"] == \"value3 ; with semicolon\"\r\n~~~\r\n\r\nBoth keys and values are case sensitive.\r\n\r\n~~~nit\r\nini = new IniFile.from_string(\"\"\"\r\nProperty1=value1\r\nproperty2=Value2\r\n\"\"\")\r\nassert ini[\"property1\"] == null\r\nassert ini[\"Property1\"] == \"value1\"\r\nassert ini[\"property2\"] != \"value2\"\r\nassert ini[\"property2\"] == \"Value2\"\r\n~~~\r\n\r\n### Sections\r\n\r\nProperties may be grouped into arbitrary sections.\r\nThe section name appears on a line by itself between square brackets (`[` and `]`).\r\n\r\nAll keys after the section declaration are associated with that section.\r\nThe is no explicit \"end of section\" delimiter; sections end at the next section\r\ndeclaration or the end of the file.\r\nSections cannot be nested.\r\n\r\n~~~nit\r\nvar content = \"\"\"\r\nkey1=value1\r\nkey2=value2\r\n[section1]\r\nkey1=value3\r\nkey2=value4\r\n[section2]\r\nkey1=value5\r\n\"\"\"\r\n\r\nini = new IniFile.from_string(content)\r\nassert ini[\"key1\"] == \"value1\"\r\nassert ini[\"unknown\"] == null\r\nassert ini[\"section1.key1\"] == \"value3\"\r\nassert ini[\"section1.unknown\"] == null\r\nassert ini[\"section2.key1\"] == \"value5\"\r\n~~~\r\n\r\nSections can be iterated over:\r\n\r\n~~~nit\r\ni = 1\r\nfor section in ini.sections do\r\n\tassert section.name == \"section{i}\"\r\n\tassert section[\"key1\"].has_prefix(\"value\")\r\n\ti += 1\r\nend\r\n~~~\r\n\r\nWhen iterating over a file properties, only properties at root are returned.\r\n`flatten` can be used to iterate over all properties including the one from\r\nsections.\r\n\r\n~~~nit\r\nassert ini.join(\", \", \": \") == \"key1: value1, key2: value2\"\r\nassert ini.flatten.join(\", \", \": \") ==\r\n\t\"key1: value1, key2: value2, section1.key1: value3, section1.key2: value4, section2.key1: value5\"\r\n\r\ni = 0\r\nfor key, value in ini do\r\n\ti += 1\r\n\tassert key == \"key{i}\" and value == \"value{i}\"\r\nend\r\nassert i == 2\r\n\r\n~~~\r\n\r\nSections name may contain any character including brackets (`[` and `]`).\r\nSpaces are trimmed.\r\n\r\n~~~nit\r\nini = new IniFile.from_string(\"\"\"\r\n[[section1]]\r\nkey=value1\r\n[ section 2 ]\r\nkey=value2\r\n[section1.section3]\r\nkey=value3\r\n\"\"\")\r\nassert ini.sections.length == 3\r\nassert ini[\"[section1].key\"] == \"value1\"\r\nassert ini[\"section 2.key\"] == \"value2\"\r\nassert ini[\"section1.section3.key\"] == \"value3\"\r\nassert ini.sections.last.name == \"section1.section3\"\r\n~~~\r\n\r\nThe dot `.` notation is used to create new sections with `[]=`.\r\nUnknown sections will be created on the fly.\r\n\r\n~~~nit\r\nini = new IniFile\r\nini[\"key\"] = \"value1\"\r\nini[\"section1.key\"] = \"value2\"\r\nini[\"section2.key\"] = \"value3\"\r\n\r\nstream = new StringWriter\r\nini.write_to(stream)\r\nassert stream.to_s == \"\"\"\r\nkey=value1\r\n[section1]\r\nkey=value2\r\n[section2]\r\nkey=value3\r\n\"\"\"\r\n~~~\r\n\r\nSections can also be created manually:\r\n\r\n~~~nit\r\nini = new IniFile\r\nini[\"key\"] = \"value1\"\r\n\r\nvar section = new IniSection(\"section1\")\r\nsection[\"key\"] = \"value2\"\r\nini.sections.add section\r\n\r\nstream = new StringWriter\r\nini.write_to(stream)\r\nassert stream.to_s == \"\"\"\r\nkey=value1\r\n[section1]\r\nkey=value2\r\n\"\"\"\r\n~~~\r\n\r\n### Comments\r\n\r\nComments are indicated by semicolon (`;`) or a number sign (`#`) at the begining\r\nof the line. Commented lines are ignored as well as empty lines.\r\n\r\n~~~nit\r\nini = new IniFile.from_string(\"\"\"\r\n; This is a comment.\r\n; property1=value1\r\n\r\n# This is another comment.\r\n# property2=value2\r\n\"\"\")\r\nassert ini.is_empty\r\n~~~\r\n\r\n### Unicode support\r\n\r\nINI files support Unicode:\r\n\r\n~~~nit\r\nini = new IniFile.from_string(\"\"\"\r\nproperty❤=héhé\r\n\"\"\")\r\nassert ini[\"property❤\"] == \"héhé\"\r\n~~~"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2751","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2751/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2751/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2751/events","html_url":"https://github.com/nitlang/nit/pull/2751","id":456487950,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjg4NTIzMTUw","number":2751,"title":"Introduce `Logger`, a simple yet powerful logging system","user":{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2019-06-15T01:46:34Z","updated_at":"2019-06-15T21:05:27Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2751","html_url":"https://github.com/nitlang/nit/pull/2751","diff_url":"https://github.com/nitlang/nit/pull/2751.diff","patch_url":"https://github.com/nitlang/nit/pull/2751.patch"},"body":"# A simple logger for Nit\r\n\r\n## Basic Usage\r\n\r\nCreate a new `Logger` with a severity level threshold set to `warn_level`:\r\n\r\n~~~nit\r\nvar logger = new Logger(warn_level)\r\n~~~\r\n\r\nMessages with a severity equal or higher than `warn_level` will be displayed:\r\n\r\n~~~nit\r\nlogger.error \"Displays an error.\"\r\nlogger.warn \"Displays a warning.\"\r\n~~~\r\n\r\nMessages with a lower severity are silenced:\r\n\r\n~~~nit\r\nlogger.info \"Displays nothing.\"\r\n~~~\r\n\r\n`FileLogger` can be used to output the messages into a file:\r\n\r\n~~~nit\r\nvar log_file = \"my.log\"\r\n\r\nlogger = new FileLogger(warn_level, log_file, append = false)\r\nlogger.error(\"An error\")\r\nlogger.info(\"Some info\")\r\nlogger.close\r\n\r\nassert log_file.to_path.read_all == \"An error\\n\"\r\nlog_file.to_path.delete\r\n~~~\r\n\r\n## Severity levels\r\n\r\nEach message is associated with a level that indicate its severity.\r\nOnly messages with a severity equal to or higher than the logger `level`\r\nthreshold will be displayed.\r\n\r\nSeverity levels from the most severe to the least severe:\r\n\r\n* `unknown_level`: An unknown message that should always be outputted.\r\n* `fatal_level`: An unhandleable error that results in a program crash.\r\n* `error_level`: A handleable error condition.\r\n* `warn_level`: A warning.\r\n* `info_level`: Generic (useful) information about system operation.\r\n* `debug_level`: Low-level information for developpers.\r\n\r\n## Formatting messages\r\n\r\nYou can create custom formatters by implementing the `Formatter` interface.\r\n\r\n~~~nit\r\nclass MyFormatter\r\n\tsuper Formatter\r\n\r\n\tredef fun format(level, message) do\r\n\t\tif level < warn_level then return message\r\n\t\treturn \"!!!{message}!!!\"\r\n\tend\r\nend\r\n~~~\r\n\r\nSee `DefaultFormatter` for a more advanced implementation example.\r\n\r\nEach Logger can be given a default formatter used to format the every messages\r\nbefore outputting them:\r\n\r\n~~~nit\r\nvar formatter = new MyFormatter\r\nvar stderr = new StringWriter\r\nvar logger = new Logger(warn_level, stderr, formatter)\r\n\r\nlogger.warn(\"This is a warning.\")\r\nassert stderr.to_s.trim.split(\"\\n\").last == \"!!!This is a warning.!!!\"\r\n~~~\r\n\r\nOptionally, a `Formatter` can be given to replace the `default_formatter`\r\nused by default:\r\n\r\n~~~nit\r\n# Create a formatter with no default decorator\r\nlogger = new Logger(warn_level, stderr, null)\r\n\r\n# Display a message without any formatter\r\nlogger.warn(\"This is a warning.\")\r\nassert stderr.to_s.trim.split(\"\\n\").last == \"This is a warning.\"\r\n\r\n# Display a message with a custom formatter\r\nlogger.warn(\"This is a warning.\", formatter)\r\nassert stderr.to_s.trim.split(\"\\n\").last == \"!!!This is a warning.!!!\"\r\n~~~"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2747","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2747/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2747/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2747/events","html_url":"https://github.com/nitlang/nit/pull/2747","id":444577497,"node_id":"MDExOlB1bGxSZXF1ZXN0Mjc5MjA5MjEx","number":2747,"title":"Introduction of contracts in Nit","user":{"login":"Delja","id":26239416,"node_id":"MDQ6VXNlcjI2MjM5NDE2","avatar_url":"https://avatars1.githubusercontent.com/u/26239416?v=4","gravatar_id":"","url":"https://api.github.com/users/Delja","html_url":"https://github.com/Delja","followers_url":"https://api.github.com/users/Delja/followers","following_url":"https://api.github.com/users/Delja/following{/other_user}","gists_url":"https://api.github.com/users/Delja/gists{/gist_id}","starred_url":"https://api.github.com/users/Delja/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Delja/subscriptions","organizations_url":"https://api.github.com/users/Delja/orgs","repos_url":"https://api.github.com/users/Delja/repos","events_url":"https://api.github.com/users/Delja/events{/privacy}","received_events_url":"https://api.github.com/users/Delja/received_events","type":"User","site_admin":false},"labels":[{"id":1252784180,"node_id":"MDU6TGFiZWwxMjUyNzg0MTgw","url":"https://api.github.com/repos/nitlang/nit/labels/ok_to_test","name":"ok_to_test","color":"1e179e","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-05-15T18:16:56Z","updated_at":"2019-05-26T23:36:41Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2747","html_url":"https://github.com/nitlang/nit/pull/2747","diff_url":"https://github.com/nitlang/nit/pull/2747.diff","patch_url":"https://github.com/nitlang/nit/pull/2747.patch"},"body":"# Contract\r\n\r\nAdding contract programming (Design by contract) in Nit language. Contracts works with nit annotations.\r\n\r\n## Annotations\r\n\r\nTo define a new contract you need to use the corresponding annotation. For example it is possible to define a contract that x must be strictly greater than 5. To do it would be necessary to define the contract in the following way `expects (x > 5)`. All expressions returning a boolean (comparison...) can be used as a condition.\r\n\r\nTwo annotations were added:\r\n\t\r\n- `expects` to indicate the conditions need to the execution of the methods\r\n- `ensures` to indicate the conditions of guarantee at the end of the execution of the methods\r\n\r\n## Method contract (ensures, expects)\r\n\r\nFor each method it is possible to define preconditions (`expects`) and  post-conditions (`ensures`). If the call of the method satisfies the prerequisites of the method, the caller may assume that the return conditions will be satisfied.\r\n\r\nThe method contracts can access all the parameters of the method as well as the set of attributes/methods visible in the context of the method. i.e the set of parameters and the set of methods and attributes of the current class can be used (attributes declare locally in the method can not be used). For post-conditions (ensures) the `result` attribute has been added to perform a check on the return value of the method.\r\n\r\n## Process\r\n\r\nA phase is executed to check all the methods. This check is done to know if:\r\n\r\n- The method is annoted (redefined or not)\r\n\r\n- The method is a redefinition of a method already having a contract (i.e a method that does not add any new conditions to the existing contract).\r\n\r\nWhen a contract is detected the code it's `extended` to add the verification features. A method is created to check the conditions of the contract.\r\n\r\n### Exemple\r\n\r\n#### Expect:\r\n```\r\nclass MyClass\r\n\tfun foo(x: Int)\r\n\tis\r\n\t\texpects(x > 0)\r\n\tdo\r\n\t\t[...]\r\n\tend\r\nend\r\n```\r\nRepresentation of the compiled class\r\n```\r\nclass MyClass\r\n\tfun foo(x: Int)\r\n\tis\r\n\t\texpects(x > 0)\r\n\tdo\r\n\t\tfoo_expects(x)\r\n\t\t[...]\r\n\tend\r\n\t\r\n\tfun foo_expects(x: Int)\r\n\tdo\r\n\t\tassert x > 0\r\n\tend\r\nend\r\n```\r\n#### Ensure:\r\n```\r\nclass MyClass\r\n\tfun foo(x: Int): Bool\r\n\tis\r\n\t\tensures(result == true)\r\n\tdo\r\n\t\t[...]\r\n\t\treturn true\r\n\tend\r\nend\r\n```\r\nRepresentation of the compiled class\r\n\r\n```\r\nclass MyClass\r\n\tfun foo(x: Int): Bool\r\n\tis\r\n\t\tensures(result == true)\r\n\tdo\r\n\t\t[...]\r\n\t\tvar result = true\r\n\t\tfoo_ensures(x, result)\r\n\t\treturn result\r\n\tend\r\n\t\r\n\tfun foo_ensures(x: Int, result: Bool)\r\n\tdo\r\n\t\tassert result == true\r\n\tend\r\nend\r\n```\r\n\r\n## Inheritance\r\n\r\nContracts support redefinition and adding condition. Noted that when a contract is defines in a parent class, it is no longer possible to remove this contract on all the classes that inherit or redefine them. They only need to be increased according to different subtyping rules.\r\n\r\nAll preconditions (expects) can be weakened. i.e it is possible to provide a new alternative to validate the contract. This corresponds to the use of a logical OR between the old and the new conditions.\r\n\r\nAll post-conditions (ensure) can be consolidate. i.e the new condition of the contract will provide a new guarantee to the user of the method. This rule can be translates into a logical AND between the old and the new conditions.\r\n\r\n### Exemple\r\n\r\n#### Expect\r\n\r\n```\r\nclass SubMyClass\r\n\tsuper MyClass\r\n\t\r\n\tredef fun foo(x: Int)\r\n\tis\r\n\t\texpects(x > 0, x == 0)\r\n\tdo\r\n\t\tfoo_expects(x)\r\n\t\t[...]\r\n\tend\r\n\t\r\n\tredef fun foo_expects(x: Int)\r\n\tdo\r\n\t\tif x == 0 then return\r\n\t\tassert super(x)\r\n\tend\r\nend\r\n```\r\n\r\n#### Ensure\r\n```\r\nclass SubMyClass\r\n\tsuper MyClass\r\n\t\r\n\tredef fun foo(x: Int): Bool\r\n\tis\r\n\t\tensures(result == true, x > 0)\r\n\tdo\r\n\t\t[...]\r\n\t\tvar result = true\r\n\t\tfoo_ensure(x, result)\r\n\t\treturn result\r\n\tend\r\n\t\r\n\tredef fun foo_ensures(x: Int, result: Bool)\r\n\tdo\r\n\t\tassert x > 0\r\n\t\tassert super(x, result)\r\n\tend\r\nend\r\n```\r\n\r\nSummary\r\n\r\n| Annotation    |  Inheritance condition type  | \r\n| ------------- | -------------| \r\n| expects       |        And (&&) |\r\n| ensures       |        Or (\\|\\|)  |\r\n\r\n## Invocation \r\n\r\nThe contracts extend the annotated methods by adding the call to the verification method. This means that once the method extended the execution of contracts will be systematically call (does not matter external or internal call). This part is subject to evolution in the months to come.\r\n"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2744","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2744/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2744/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2744/events","html_url":"https://github.com/nitlang/nit/pull/2744","id":415911200,"node_id":"MDExOlB1bGxSZXF1ZXN0MjU3Mjk3MTUx","number":2744,"title":"Some more small improvements on gitlab-ci","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2019-03-01T02:23:47Z","updated_at":"2019-03-03T12:58:20Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2744","html_url":"https://github.com/nitlang/nit/pull/2744","diff_url":"https://github.com/nitlang/nit/pull/2744.diff","patch_url":"https://github.com/nitlang/nit/pull/2744.patch"},"body":""},{"url":"https://api.github.com/repos/nitlang/nit/issues/2739","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2739/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2739/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2739/events","html_url":"https://github.com/nitlang/nit/pull/2739","id":414309530,"node_id":"MDExOlB1bGxSZXF1ZXN0MjU2MDQ4NDY4","number":2739,"title":"ci: basic bench with old branch","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2019-02-25T21:13:23Z","updated_at":"2019-03-01T00:18:53Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2739","html_url":"https://github.com/nitlang/nit/pull/2739","diff_url":"https://github.com/nitlang/nit/pull/2739.diff","patch_url":"https://github.com/nitlang/nit/pull/2739.patch"},"body":"This adds a job where a basic execution is compared against origin/master is order to catch important time or space regressions. Because the test machine is shared with many jobs, the results are not that reliable and some additional checks by the integrator might be required.\r\n\r\nHowever, the script can help developers to do a basic check to document their PR."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2728","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2728/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2728/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2728/events","html_url":"https://github.com/nitlang/nit/pull/2728","id":354396139,"node_id":"MDExOlB1bGxSZXF1ZXN0MjExMTY4MTM3","number":2728,"title":"Move Gamnit, Asteronits, Action Nitro, Tinks! and model_viewer to their own repo","user":{"login":"xymus","id":208057,"node_id":"MDQ6VXNlcjIwODA1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/208057?v=4","gravatar_id":"","url":"https://api.github.com/users/xymus","html_url":"https://github.com/xymus","followers_url":"https://api.github.com/users/xymus/followers","following_url":"https://api.github.com/users/xymus/following{/other_user}","gists_url":"https://api.github.com/users/xymus/gists{/gist_id}","starred_url":"https://api.github.com/users/xymus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xymus/subscriptions","organizations_url":"https://api.github.com/users/xymus/orgs","repos_url":"https://api.github.com/users/xymus/repos","events_url":"https://api.github.com/users/xymus/events{/privacy}","received_events_url":"https://api.github.com/users/xymus/received_events","type":"User","site_admin":false},"labels":[{"id":81916087,"node_id":"MDU6TGFiZWw4MTkxNjA4Nw==","url":"https://api.github.com/repos/nitlang/nit/labels/need_review","name":"need_review","color":"fbca04","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-08-27T16:56:26Z","updated_at":"2018-08-31T21:31:02Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2728","html_url":"https://github.com/nitlang/nit/pull/2728","diff_url":"https://github.com/nitlang/nit/pull/2728.diff","patch_url":"https://github.com/nitlang/nit/pull/2728.patch"},"body":"The Gamnit package and example games can now be found at http://gitlab.com/xymus/gamnit, and as always, for general information see http://gamnit.org.\r\n\r\nOnce this is merged, you can install Gamnit using `nitpm install gamnit`, or to get the precise version pinned by a given project, run `nitpm install` from the root of the project.\r\n\r\nGamnit should be easier to manage outside of the Nit repo and as a nitpm package. More specific CI tests will allow for better coverage and faster merges, and nitpm versioning will allow some support for older games without blocking improvements to the Gamnit API.\r\n\r\nThis PR is probably not final, I'm considering splitting `inkscape_tools` in two, to move the script specific to Gamnit. I'm not sure what to do with strongly related packages like `glesv2, egl, x11 & sdl2`. I know even less what to do with `geometry` which is used only with Gamnit and offers some Gamnit specific services."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2721","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2721/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2721/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2721/events","html_url":"https://github.com/nitlang/nit/pull/2721","id":334284546,"node_id":"MDExOlB1bGxSZXF1ZXN0MTk2Mjk5MjYw","number":2721,"title":"lib/markdown2: introduce LaTeX/Maths mode","user":{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false},"labels":[{"id":81916087,"node_id":"MDU6TGFiZWw4MTkxNjA4Nw==","url":"https://api.github.com/repos/nitlang/nit/labels/need_review","name":"need_review","color":"fbca04","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-06-20T23:30:32Z","updated_at":"2018-06-27T18:59:09Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2721","html_url":"https://github.com/nitlang/nit/pull/2721","diff_url":"https://github.com/nitlang/nit/pull/2721.diff","patch_url":"https://github.com/nitlang/nit/pull/2721.patch"},"body":"This PR is a follow up of #2720 and introduces a LaTeX/Maths mode for `lib/markdown2`.\r\nThe goal is to handle #791 when it will be merged with the documentation tools.\r\n\r\nThe maths mode, when enabled, uses the [`tex2im`](http://www.nought.de/tex2im.php) tool to render LaTeX equations as images and includes them into the HTML output.\r\n\r\nSo one can write:\r\n\r\n~~~md\r\nThis is a LaTeX equation: $\\\\psi_{tot}(x,-t_0,r) = \\\\frac{1}{(2\\\\pi)^2}$.\r\n~~~\r\n\r\nAnd the output will be:\r\n\r\n~~~html\r\n<p>This is a LaTeX equation: <img alt=\"\\\\psi_{tot}(x,-t_0,r) = \\\\frac{1}{(2\\\\pi)^2}\" src=\"b123b75db5eb96ac4496d017a18633b5.png\" /> baz</p>\r\n~~~\r\n\r\nWhere the image will be: ![b123b75db5eb96ac4496d017a18633b5](https://user-images.githubusercontent.com/583144/41689757-448c7f40-74c0-11e8-9a95-785daa68d5bb.png)\r\n\r\nTo work this PR requires [`tex2im`](http://www.nought.de/tex2im.php) to be installed and added to the path."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2709","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2709/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2709/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2709/events","html_url":"https://github.com/nitlang/nit/pull/2709","id":329128035,"node_id":"MDExOlB1bGxSZXF1ZXN0MTkyNDYxODcw","number":2709,"title":"Added UNIX support to nitcorn","user":{"login":"matthmsl","id":8661695,"node_id":"MDQ6VXNlcjg2NjE2OTU=","avatar_url":"https://avatars3.githubusercontent.com/u/8661695?v=4","gravatar_id":"","url":"https://api.github.com/users/matthmsl","html_url":"https://github.com/matthmsl","followers_url":"https://api.github.com/users/matthmsl/followers","following_url":"https://api.github.com/users/matthmsl/following{/other_user}","gists_url":"https://api.github.com/users/matthmsl/gists{/gist_id}","starred_url":"https://api.github.com/users/matthmsl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthmsl/subscriptions","organizations_url":"https://api.github.com/users/matthmsl/orgs","repos_url":"https://api.github.com/users/matthmsl/repos","events_url":"https://api.github.com/users/matthmsl/events{/privacy}","received_events_url":"https://api.github.com/users/matthmsl/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-06-04T16:24:28Z","updated_at":"2018-06-08T16:30:23Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2709","html_url":"https://github.com/nitlang/nit/pull/2709","diff_url":"https://github.com/nitlang/nit/pull/2709.diff","patch_url":"https://github.com/nitlang/nit/pull/2709.patch"},"body":"**DO NOT MERGE BEFORE PR #2708** \r\n\r\nAs requested in #2678 \r\n\r\n- Added new module `nitcorn::unix` to add unix support\r\n- Added tests&example code for new module `unix`\r\n- Multiple dirty redifinitions of reactor's class for unix support (because of dirty redefinity of `Sys` in reactor)\r\n- Implementation of unix support for libevent added in PR #2708 \r\n"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2696","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2696/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2696/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2696/events","html_url":"https://github.com/nitlang/nit/pull/2696","id":324158113,"node_id":"MDExOlB1bGxSZXF1ZXN0MTg4ODQwMzYy","number":2696,"title":"Naive_interpreter : Adding object inspector","user":{"login":"Delja","id":26239416,"node_id":"MDQ6VXNlcjI2MjM5NDE2","avatar_url":"https://avatars1.githubusercontent.com/u/26239416?v=4","gravatar_id":"","url":"https://api.github.com/users/Delja","html_url":"https://github.com/Delja","followers_url":"https://api.github.com/users/Delja/followers","following_url":"https://api.github.com/users/Delja/following{/other_user}","gists_url":"https://api.github.com/users/Delja/gists{/gist_id}","starred_url":"https://api.github.com/users/Delja/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Delja/subscriptions","organizations_url":"https://api.github.com/users/Delja/orgs","repos_url":"https://api.github.com/users/Delja/repos","events_url":"https://api.github.com/users/Delja/events{/privacy}","received_events_url":"https://api.github.com/users/Delja/received_events","type":"User","site_admin":false},"labels":[{"id":81916044,"node_id":"MDU6TGFiZWw4MTkxNjA0NA==","url":"https://api.github.com/repos/nitlang/nit/labels/need_work","name":"need_work","color":"e11d21","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-17T19:39:00Z","updated_at":"2018-06-21T18:23:02Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2696","html_url":"https://github.com/nitlang/nit/pull/2696","diff_url":"https://github.com/nitlang/nit/pull/2696.diff","patch_url":"https://github.com/nitlang/nit/pull/2696.patch"},"body":"Add an object inspector to the naive interpreter.\r\nTo use it, you call the .inspect_o method on the object you want to inspect. The interpreter will then display the object as a tree. Note that the call to .inspect_o is considered as a breakpoint and will stop the interpreter from running to enter on step-by-step mode. To define some breakpoints on start interpretation you can use the command –break, to add breakpoint enter ‘break [file name] [line numbers]’  to remove breakpoint enter ‘clear [file name] [line numbers]’.\r\n\r\nThe step-by-step mode offers different features:\r\n  \r\n\r\n- The step-into which allows to enter a method during its call (Enter 'in' to perform this action).\r\n- The step-over which makes it possible to inspect the same method line by line. If there is no more line in the method we come back to the calling method, if there is no more line at all it means that the execution is over. (Press 'enter' to perform this action).\r\n- Display local variables of the currently executed method (Enter 'all' to perform this action)\r\n- The display of previously inspected objects (Enter 'watch' to perform this action)\r\n- Start the execution until the next breakpoint (Enter 'next' to perform this action)\r\n- Adding and removing breakpoint during the interpretation\r\n\r\nIf you enter anything else you will leave the step-by-step mode"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2678","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2678/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2678/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2678/events","html_url":"https://github.com/nitlang/nit/issues/2678","id":322396514,"node_id":"MDU6SXNzdWUzMjIzOTY1MTQ=","number":2678,"title":"Add UNIX socket support to nitcorn","user":{"login":"matthmsl","id":8661695,"node_id":"MDQ6VXNlcjg2NjE2OTU=","avatar_url":"https://avatars3.githubusercontent.com/u/8661695?v=4","gravatar_id":"","url":"https://api.github.com/users/matthmsl","html_url":"https://github.com/matthmsl","followers_url":"https://api.github.com/users/matthmsl/followers","following_url":"https://api.github.com/users/matthmsl/following{/other_user}","gists_url":"https://api.github.com/users/matthmsl/gists{/gist_id}","starred_url":"https://api.github.com/users/matthmsl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/matthmsl/subscriptions","organizations_url":"https://api.github.com/users/matthmsl/orgs","repos_url":"https://api.github.com/users/matthmsl/repos","events_url":"https://api.github.com/users/matthmsl/events{/privacy}","received_events_url":"https://api.github.com/users/matthmsl/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-05-11T18:44:37Z","updated_at":"2018-05-12T15:30:22Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"## Description\r\n@privat wishes to add UNIX socket support to nitcorn. This implies to add UNIX support to libevent standard library. This issue will be subject of a future PR.\r\n\r\n## Target use\r\n```nit\r\nimport nitcorn\r\n\r\n# Simple Action to display the Hello World page and the get arguments\r\nclass HelloWorldAction\r\n\tsuper Action\r\n\r\n\tredef fun answer(http_request, turi)\r\n\tdo\r\n\t\tvar title = \"Hello World!\"\r\n\t\tvar args = http_request.get_args.join(\",\", \":\")\r\n\r\n\t\tvar response = new HttpResponse(200)\r\n\t\tresponse.body = \"\"\"\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n\t<meta charset=\"utf-8\">\r\n\t<title>{{{title}}}</title>\r\n</head>\r\n<body>\r\n\t<h1>{{{title}}}</h1>\r\n\t<p>GET args: {{{args}}}</p>\r\n</body>\r\n</html>\"\"\"\r\n\t\treturn response\r\n\tend\r\nend\r\n\r\n# Listen on `localhost:8080`\r\nvar vh = new VirtualHost(\"/tmp/example.sock\") # Or another class... \r\n\r\n# Serve `http:/hello.html` with our custom action\r\nvh.routes.add new Route(\"/hello.html\", new HelloWorldAction)\r\n\r\n# Serve everything else under `http://localhost:8080/` using a `FileServer` with a root at \"/var/www/\"\r\nvh.routes.add new Route(null, new FileServer(\"/var/www/\"))\r\n\r\n# Launch server\r\nvar factory = new HttpFactory.and_libevent\r\nfactory.config.virtual_hosts.add vh\r\nfactory.run\r\n```"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2602","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2602/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2602/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2602/events","html_url":"https://github.com/nitlang/nit/pull/2602","id":283758939,"node_id":"MDExOlB1bGxSZXF1ZXN0MTU5NTY1NDYx","number":2602,"title":"modelize: broken mproperties can have definitions","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-12-21T02:57:50Z","updated_at":"2018-05-31T13:50:40Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2602","html_url":"https://github.com/nitlang/nit/pull/2602","diff_url":"https://github.com/nitlang/nit/pull/2602.diff","patch_url":"https://github.com/nitlang/nit/pull/2602.patch"},"body":"so, when keep-going is activated, mproperty.intro and other related services wont crashes.\r\nThus fixes #2599\r\nmoreover, the mpropdefs attempts are registered in the model (if one need them?).\r\n\r\nThis might however add some unexpected effects (one does not simply add broken entities into mordor^Wmodel).\r\n\r\nTODO: the same thing with classes?"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2601","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2601/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2601/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2601/events","html_url":"https://github.com/nitlang/nit/issues/2601","id":283747976,"node_id":"MDU6SXNzdWUyODM3NDc5NzY=","number":2601,"title":"ELI5: `is optional` behavior","user":{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false},"labels":[{"id":55675468,"node_id":"MDU6TGFiZWw1NTY3NTQ2OA==","url":"https://api.github.com/repos/nitlang/nit/labels/bug","name":"bug","color":"eb6420","default":true},{"id":213655573,"node_id":"MDU6TGFiZWwyMTM2NTU1NzM=","url":"https://api.github.com/repos/nitlang/nit/labels/it%20is%20not%20a%20bug%20it%20is%20a%20feature","name":"it is not a bug it is a feature","color":"fad8c7","default":false},{"id":55675455,"node_id":"MDU6TGFiZWw1NTY3NTQ1NQ==","url":"https://api.github.com/repos/nitlang/nit/labels/spec","name":"spec","color":"207de5","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-12-21T01:43:14Z","updated_at":"2017-12-21T01:43:14Z","closed_at":null,"author_association":"MEMBER","body":"Two questions in one.\r\n\r\nFirst when redefining an `optional` attribute:\r\n\r\n~~~nit\r\nclass A\r\n\tvar foo: String = \"foo\" is optional\r\nend\r\n\r\nclass B\r\n\tsuper A\r\n\r\n\tredef var foo = \"bar\" # is optional\r\nend\r\n~~~\r\n\r\nWithout the `optional` annotation on the redef, the compiler will return:\r\n~~~sh\r\nfile.nit:8,12--14: Redef Error: expected `nullable String` type for parameter `foo'; got `String`.\r\n\t\tredef var foo = \"bar\"\r\n\t\t          ^\r\n~~~\r\n\r\nWith the annotation, no problem.\r\n\r\nI'm not sure about the spec here. Is the annotation really needed on the redef? If yes, shouldn't the error message be more explicative? Either the spec or the compiler is wrong here.\r\n\r\nThen when setting the default value of optional (with the annotation obviously):\r\n\r\n~~~nit\r\nvar b = new B(\"ba\")\r\nprint b.foo\r\n~~~\r\n\r\nI expected the previous piece of code to display `ba` but it display `bar`.\r\nSo the attribute is allowed as optional in the constructor but the passed value is never assigned.\r\nHere again, I'm not sure about the spec of this annotation."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2600","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2600/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2600/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2600/events","html_url":"https://github.com/nitlang/nit/issues/2600","id":283745521,"node_id":"MDU6SXNzdWUyODM3NDU1MjE=","number":2600,"title":"bug/spec: `loader` allows multiple packages with the same name","user":{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false},"labels":[{"id":55675468,"node_id":"MDU6TGFiZWw1NTY3NTQ2OA==","url":"https://api.github.com/repos/nitlang/nit/labels/bug","name":"bug","color":"eb6420","default":true},{"id":55675455,"node_id":"MDU6TGFiZWw1NTY3NTQ1NQ==","url":"https://api.github.com/repos/nitlang/nit/labels/spec","name":"spec","color":"207de5","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-12-21T01:26:46Z","updated_at":"2017-12-21T01:26:46Z","closed_at":null,"author_association":"MEMBER","body":"See:\r\n* `template`\r\n* `gamnit::examples::template`\r\n\r\nMost of the generated code by the compiler and some tools are not ready for that.\r\n\r\nIs this a bug, is this voluntary? What should we do?"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2599","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2599/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2599/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2599/events","html_url":"https://github.com/nitlang/nit/issues/2599","id":283744971,"node_id":"MDU6SXNzdWUyODM3NDQ5NzE=","number":2599,"title":"bug: `_intro` not initialized when using `--keep-going` option","user":{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false},"labels":[{"id":55675468,"node_id":"MDU6TGFiZWw1NTY3NTQ2OA==","url":"https://api.github.com/repos/nitlang/nit/labels/bug","name":"bug","color":"eb6420","default":true}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-12-21T01:23:31Z","updated_at":"2017-12-21T01:23:31Z","closed_at":null,"author_association":"MEMBER","body":"Using the `--keep-going` option seems to allow partial initialization or MProperties.\r\n\r\nHere the code to reproduce the problem:\r\n\r\n~~~nit\r\nimport nitc::frontend\r\n\r\nvar toolcontext = new ToolContext\r\ntoolcontext.process_options(args)\r\nvar arguments = toolcontext.option_context.rest\r\n\r\n# build model\r\nvar model = new Model\r\nvar mbuilder = new ModelBuilder(model, toolcontext)\r\nvar mmodules = mbuilder.parse_full(arguments)\r\n\r\n# process\r\nif mmodules.is_empty then return\r\nmbuilder.run_phases\r\ntoolcontext.run_global_phases(mmodules)\r\n\r\nfor mproperty in model.mproperties do\r\n\tprint mproperty.intro\r\nend\r\n~~~\r\n\r\nWhen executed on `contrib/`, this produces:\r\n\r\n~~~sh\r\nRuntime error: Uninitialized attribute _intro (/home/morriar/dev/nit/contrib/nitc/model/model.nit:2156)\r\n-------------------------------------------------\r\n--   Stack Trace   ------------------------------\r\n-------------------------------------------------\r\n` fatal_exit\r\n` nitc$MProperty$intro (/home/morriar/dev/nit/contrib/nitc/model/model.nit:2156)\r\n` test::test$core::Sys$main (test.nit:20)\r\n` main\r\n` __libc_start_main\r\n` _start\r\n` \r\n-------------------------------------------------\r\n~~~"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2583","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2583/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2583/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2583/events","html_url":"https://github.com/nitlang/nit/issues/2583","id":275076199,"node_id":"MDU6SXNzdWUyNzUwNzYxOTk=","number":2583,"title":"runtime crash with \"Numeric\"","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-11-18T12:28:11Z","updated_at":"2017-11-22T21:11:19Z","closed_at":null,"author_association":"NONE","body":"```\r\nvar c:Numeric =233\r\nvar b:Numeric =1.0\r\nprint c+b\r\n```\r\nIn this simple case it could be detected by the compiler but in the general case it should be handled somehow. If it crashes or throws a runtime exception it means the Numeric type is useless and dangerous."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2582","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2582/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2582/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2582/events","html_url":"https://github.com/nitlang/nit/issues/2582","id":274191025,"node_id":"MDU6SXNzdWUyNzQxOTEwMjU=","number":2582,"title":"Numeric types documentation and rough corners","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2017-11-15T15:12:07Z","updated_at":"2017-11-16T05:13:39Z","closed_at":null,"author_association":"NONE","body":"some difficult cases in the language need explanation, http://nitlanguage.org/manual/basic_type.html leaves much open.\r\n\r\n```print 1000*1000*1000``` results in ```-73741824``` on a 32bit system - this will be surprising for many programmers. I see 8,16,32 bit integers but nothing like bignums or 64bit integers?\r\n```\r\nvar a:Numeric\r\na=1\r\nprint a\r\na=1.0\r\nprint a\r\n```\r\nworks as expected, whereas \r\n```\r\nvar a:Numeric\r\na=1.0\r\nprint a+1\r\n``` \r\ngives an error. Is that intended? Is there some clever trick to achieve behaviour similar to that of most other languages?\r\n\r\n```1.0/0.0``` and ```1/0``` are handled differently. This is so in most other languages but does it make much sense? In a typed language a numeric expression returning a \"not-a-number\" value is a paradox and mabye https://github.com/nitlang/nit/issues/2314 could go."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2576","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2576/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2576/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2576/events","html_url":"https://github.com/nitlang/nit/issues/2576","id":272567024,"node_id":"MDU6SXNzdWUyNzI1NjcwMjQ=","number":2576,"title":"Calculator example bugs and improvements","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-09T13:39:03Z","updated_at":"2017-11-14T19:02:33Z","closed_at":null,"author_association":"NONE","body":"This may be the first example many people will look at so imho it deserves some love. Do you prefer very small grained PRs or dumping smaller things into this thread?\r\n\r\nAnyway, the first issue that hit me is that \"ln\" and \"log\" do nothing. \"ln\" should be unary and adding it to the uops is straightforward and works as expected. \"log\" appears to be intended as binary and I can not see why it does not work.\r\n\r\nAlso the whole logic of the calculator suffers a bit from the problem that \"basic\" and \"scientific\" calculators almost always use different logic of evaluation: \"basic\" won't honour arithmetic precedence rules, scientific will. So it may be an idea to concentrate on the scientific branch and make it real good."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2574","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2574/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2574/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2574/events","html_url":"https://github.com/nitlang/nit/issues/2574","id":271500281,"node_id":"MDU6SXNzdWUyNzE1MDAyODE=","number":2574,"title":"Update/autogenerate list of examples","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-11-06T14:48:21Z","updated_at":"2017-11-06T16:05:11Z","closed_at":null,"author_association":"NONE","body":"http://nitlanguage.org/examples/ points to only very few examples. Another few are relatively easy to find in NIT/examples and NIT/contrib\r\n\r\nSome very important examples though are hidden in lib/*  - who would search for lib/android/examples/src/ui_test.nit or /lib/app/examples/ ?"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2570","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2570/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2570/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2570/events","html_url":"https://github.com/nitlang/nit/issues/2570","id":267500522,"node_id":"MDU6SXNzdWUyNjc1MDA1MjI=","number":2570,"title":"Calculator example on Android: font size problem","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-22T21:31:16Z","updated_at":"2017-11-09T13:00:16Z","closed_at":null,"author_association":"NONE","body":"Running 'scientific14.apk' on my Moto-G the letters on the buttons and the input/result line don't fit the available size. It looks like they might narrowly fit the space but are aligned wrongly in the available space. The letters in the input/result line are cutoff at the top while the button letters/numbers are missing their bottom part.\r\n\r\n"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2569","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2569/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2569/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2569/events","html_url":"https://github.com/nitlang/nit/issues/2569","id":267499939,"node_id":"MDU6SXNzdWUyNjc0OTk5Mzk=","number":2569,"title":"Glitches in Android build system","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars3.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-10-22T21:22:55Z","updated_at":"2017-11-09T13:13:43Z","closed_at":null,"author_association":"NONE","body":"Hi,\r\n\r\ncame across some glitches in 'nit/share/libgc/android-setup-libgc.sh' :\r\n* linux-x86_64 is hardcoded in the line 'path=\"$ANDROID_NDK/toolchains/$tools_dir/prebuilt/linux-x86_64/bin/\"' - does not work on 686\r\n* gcc release version is hardcoded in the line 'tools_dirs=(    arm-linux-androideabi-4.9 x86-4.9            mipsel-linux-android-4.9)'\r\n\r\nThe tool_dirs should be obtainable by glob expansion.\r\n\r\nAlso, there was an unfriendly warning when the source was not from git:\r\n'\r\n$ make android\r\nmkdir -p bin\r\n../../bin/nitc -o bin/calculator14.apk src/android14.nit -D debug\r\nfatal: Not a git repository (or any parent up to mount point /home)\r\nStopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\r\nsrc/calculator.nit:18,2--32: Warning: `git_revision` used outside of a git repository or git binaries not available (git_revision)\r\n                app_version(0, 2, git_revision)\r\n                ^\r\n'\r\nAfter adjusting the paths the resulting apk works."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2535","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2535/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2535/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2535/events","html_url":"https://github.com/nitlang/nit/pull/2535","id":247728043,"node_id":"MDExOlB1bGxSZXF1ZXN0MTMzOTYwOTAx","number":2535,"title":"compiler: Clean `autobox`","user":{"login":"jcbrinfo","id":6044484,"node_id":"MDQ6VXNlcjYwNDQ0ODQ=","avatar_url":"https://avatars0.githubusercontent.com/u/6044484?v=4","gravatar_id":"","url":"https://api.github.com/users/jcbrinfo","html_url":"https://github.com/jcbrinfo","followers_url":"https://api.github.com/users/jcbrinfo/followers","following_url":"https://api.github.com/users/jcbrinfo/following{/other_user}","gists_url":"https://api.github.com/users/jcbrinfo/gists{/gist_id}","starred_url":"https://api.github.com/users/jcbrinfo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcbrinfo/subscriptions","organizations_url":"https://api.github.com/users/jcbrinfo/orgs","repos_url":"https://api.github.com/users/jcbrinfo/repos","events_url":"https://api.github.com/users/jcbrinfo/events{/privacy}","received_events_url":"https://api.github.com/users/jcbrinfo/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-08-03T14:35:54Z","updated_at":"2017-08-11T16:31:12Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2535","html_url":"https://github.com/nitlang/nit/pull/2535","diff_url":"https://github.com/nitlang/nit/pull/2535.diff","patch_url":"https://github.com/nitlang/nit/pull/2535.patch"},"body":"Remove a case that is unnecessary since PR #715 (in particular, see <https://github.com/nitlang/nit/commit/12aa16093122a9f55976585b76b01869d6899634#diff-a1c289b937bbc8f1bb71dcd50cd8eddcL1642>).\r\n\r\nSigned-off-by: Jean-Christophe Beaupré <jcbrinfo@users.noreply.github.com>"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2530","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2530/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2530/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2530/events","html_url":"https://github.com/nitlang/nit/pull/2530","id":244093542,"node_id":"MDExOlB1bGxSZXF1ZXN0MTMxMzYwMjU3","number":2530,"title":"lib/core/stream: add an optional `max` parameter to `read_line`","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[{"id":81916044,"node_id":"MDU6TGFiZWw4MTkxNjA0NA==","url":"https://api.github.com/repos/nitlang/nit/labels/need_work","name":"need_work","color":"e11d21","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2017-07-19T16:05:42Z","updated_at":"2018-06-05T19:41:29Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2530","html_url":"https://github.com/nitlang/nit/pull/2530","diff_url":"https://github.com/nitlang/nit/pull/2530.diff","patch_url":"https://github.com/nitlang/nit/pull/2530.patch"},"body":""},{"url":"https://api.github.com/repos/nitlang/nit/issues/2521","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2521/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2521/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2521/events","html_url":"https://github.com/nitlang/nit/pull/2521","id":239272392,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI4MDAyODQw","number":2521,"title":"misc: Update keyword sets","user":{"login":"jcbrinfo","id":6044484,"node_id":"MDQ6VXNlcjYwNDQ0ODQ=","avatar_url":"https://avatars0.githubusercontent.com/u/6044484?v=4","gravatar_id":"","url":"https://api.github.com/users/jcbrinfo","html_url":"https://github.com/jcbrinfo","followers_url":"https://api.github.com/users/jcbrinfo/followers","following_url":"https://api.github.com/users/jcbrinfo/following{/other_user}","gists_url":"https://api.github.com/users/jcbrinfo/gists{/gist_id}","starred_url":"https://api.github.com/users/jcbrinfo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcbrinfo/subscriptions","organizations_url":"https://api.github.com/users/jcbrinfo/orgs","repos_url":"https://api.github.com/users/jcbrinfo/repos","events_url":"https://api.github.com/users/jcbrinfo/events{/privacy}","received_events_url":"https://api.github.com/users/jcbrinfo/received_events","type":"User","site_admin":false},"labels":[{"id":81916087,"node_id":"MDU6TGFiZWw4MTkxNjA4Nw==","url":"https://api.github.com/repos/nitlang/nit/labels/need_review","name":"need_review","color":"fbca04","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2017-06-28T19:37:41Z","updated_at":"2017-07-02T18:49:29Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2521","html_url":"https://github.com/nitlang/nit/pull/2521","diff_url":"https://github.com/nitlang/nit/pull/2521.diff","patch_url":"https://github.com/nitlang/nit/pull/2521.patch"},"body":"Also, order some sets alphabetically so future updates will be easier to review.\r\n\r\nSigned-off-by: Jean-Christophe Beaupré <jcbrinfo@users.noreply.github.com>"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2512","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2512/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2512/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2512/events","html_url":"https://github.com/nitlang/nit/pull/2512","id":237928231,"node_id":"MDExOlB1bGxSZXF1ZXN0MTI3MDUzOTEw","number":2512,"title":"modelize_class: Enforce single inheritance for subsets","user":{"login":"jcbrinfo","id":6044484,"node_id":"MDQ6VXNlcjYwNDQ0ODQ=","avatar_url":"https://avatars0.githubusercontent.com/u/6044484?v=4","gravatar_id":"","url":"https://api.github.com/users/jcbrinfo","html_url":"https://github.com/jcbrinfo","followers_url":"https://api.github.com/users/jcbrinfo/followers","following_url":"https://api.github.com/users/jcbrinfo/following{/other_user}","gists_url":"https://api.github.com/users/jcbrinfo/gists{/gist_id}","starred_url":"https://api.github.com/users/jcbrinfo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcbrinfo/subscriptions","organizations_url":"https://api.github.com/users/jcbrinfo/orgs","repos_url":"https://api.github.com/users/jcbrinfo/repos","events_url":"https://api.github.com/users/jcbrinfo/events{/privacy}","received_events_url":"https://api.github.com/users/jcbrinfo/received_events","type":"User","site_admin":false},"labels":[{"id":81916087,"node_id":"MDU6TGFiZWw4MTkxNjA4Nw==","url":"https://api.github.com/repos/nitlang/nit/labels/need_review","name":"need_review","color":"fbca04","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-06-22T18:08:53Z","updated_at":"2017-06-26T18:51:45Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2512","html_url":"https://github.com/nitlang/nit/pull/2512","diff_url":"https://github.com/nitlang/nit/pull/2512.diff","patch_url":"https://github.com/nitlang/nit/pull/2512.patch"},"body":"Signed-off-by: Jean-Christophe Beaupré <jcbrinfo@users.noreply.github.com>"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2507","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2507/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2507/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2507/events","html_url":"https://github.com/nitlang/nit/issues/2507","id":237221344,"node_id":"MDU6SXNzdWUyMzcyMjEzNDQ=","number":2507,"title":"markdown: some lines are lost in verbatim blocks inside a list","user":{"login":"xymus","id":208057,"node_id":"MDQ6VXNlcjIwODA1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/208057?v=4","gravatar_id":"","url":"https://api.github.com/users/xymus","html_url":"https://github.com/xymus","followers_url":"https://api.github.com/users/xymus/followers","following_url":"https://api.github.com/users/xymus/following{/other_user}","gists_url":"https://api.github.com/users/xymus/gists{/gist_id}","starred_url":"https://api.github.com/users/xymus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xymus/subscriptions","organizations_url":"https://api.github.com/users/xymus/orgs","repos_url":"https://api.github.com/users/xymus/repos","events_url":"https://api.github.com/users/xymus/events{/privacy}","received_events_url":"https://api.github.com/users/xymus/received_events","type":"User","site_admin":false},"labels":[{"id":55675468,"node_id":"MDU6TGFiZWw1NTY3NTQ2OA==","url":"https://api.github.com/repos/nitlang/nit/labels/bug","name":"bug","color":"eb6420","default":true}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-06-20T14:04:48Z","updated_at":"2017-06-20T14:04:48Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"The `markdown` module loses some lines from verbatim blocks inside list items. As far as I can tell, it happens only when the number of non-whitespace characters in the line is equal to the indentation level.\r\n\r\nFor example, if the indentation uses 4 spaces, 4 letter lines are cut:\r\n\r\n~~~~~\r\n*   4 spaces, `asdf` and `tab.` are lost\r\n    ~~~\r\n    a\r\n    as\r\n    asd\r\n    asdf\r\n\ttab.\r\n    asdfg\r\n    ~~~\r\n~~~~~\r\n\r\nAnd the `nitmd` output, notice the blank lines:\r\n~~~\r\n<ul>\r\n<li><p>4 spaces, <code>asdf</code> and <code>tab.</code> are lost</p>\r\n<pre><code>a\r\nas\r\nasd\r\n\r\n\r\nasdfg\r\n</code></pre>\r\n</li>\r\n</ul>\r\n~~~~~\r\n\r\nThe same thing happens with a 2 spaces indentation:\r\n~~~~~\r\n* 2 spaces, `as` is lost\r\n\r\n  ~~~\r\n  a\r\n  as\r\n  asd\r\n  asdf\r\n  ~~~\r\n~~~~~\r\n\r\nAnd the `nitmd` output:\r\n~~~~~\r\n<ul>\r\n<li><p>2 spaces, <code>as</code> is lost</p>\r\n<pre><code>a\r\n\r\nasd\r\nasdf\r\n</code></pre>\r\n</li>\r\n</ul>\r\n~~~~~\r\n\r\nI get this behavior with `nitmd` and when using the `markdown` module directly."},{"url":"https://api.github.com/repos/nitlang/nit/issues/2506","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2506/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2506/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2506/events","html_url":"https://github.com/nitlang/nit/issues/2506","id":237203123,"node_id":"MDU6SXNzdWUyMzcyMDMxMjM=","number":2506,"title":"benitlux dont like my password","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"xymus","id":208057,"node_id":"MDQ6VXNlcjIwODA1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/208057?v=4","gravatar_id":"","url":"https://api.github.com/users/xymus","html_url":"https://github.com/xymus","followers_url":"https://api.github.com/users/xymus/followers","following_url":"https://api.github.com/users/xymus/following{/other_user}","gists_url":"https://api.github.com/users/xymus/gists{/gist_id}","starred_url":"https://api.github.com/users/xymus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xymus/subscriptions","organizations_url":"https://api.github.com/users/xymus/orgs","repos_url":"https://api.github.com/users/xymus/repos","events_url":"https://api.github.com/users/xymus/events{/privacy}","received_events_url":"https://api.github.com/users/xymus/received_events","type":"User","site_admin":false},"assignees":[{"login":"xymus","id":208057,"node_id":"MDQ6VXNlcjIwODA1Nw==","avatar_url":"https://avatars0.githubusercontent.com/u/208057?v=4","gravatar_id":"","url":"https://api.github.com/users/xymus","html_url":"https://github.com/xymus","followers_url":"https://api.github.com/users/xymus/followers","following_url":"https://api.github.com/users/xymus/following{/other_user}","gists_url":"https://api.github.com/users/xymus/gists{/gist_id}","starred_url":"https://api.github.com/users/xymus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xymus/subscriptions","organizations_url":"https://api.github.com/users/xymus/orgs","repos_url":"https://api.github.com/users/xymus/repos","events_url":"https://api.github.com/users/xymus/events{/privacy}","received_events_url":"https://api.github.com/users/xymus/received_events","type":"User","site_admin":false}],"milestone":null,"comments":1,"created_at":"2017-06-20T13:07:26Z","updated_at":"2017-06-20T13:32:50Z","closed_at":null,"author_association":"MEMBER","body":"When I try to authenticate myself, benitlux says\r\n\r\n> Deserialization Error: Doesn't know how to deserialize class \"TenenitError\"\r\n\r\nTried with the last release on nitdroid: http://nitlanguage.org/fdroid/net.xymus.benitlux_1706191107.apk"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2501","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2501/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2501/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2501/events","html_url":"https://github.com/nitlang/nit/issues/2501","id":236324878,"node_id":"MDU6SXNzdWUyMzYzMjQ4Nzg=","number":2501,"title":"Nitweb: Add a button to raise an issue on github for nitweb","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[{"id":390632945,"node_id":"MDU6TGFiZWwzOTA2MzI5NDU=","url":"https://api.github.com/repos/nitlang/nit/labels/nitweb","name":"nitweb","color":"bfd4f2","default":false}],"state":"open","locked":false,"assignee":{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false},"assignees":[{"login":"Morriar","id":583144,"node_id":"MDQ6VXNlcjU4MzE0NA==","avatar_url":"https://avatars2.githubusercontent.com/u/583144?v=4","gravatar_id":"","url":"https://api.github.com/users/Morriar","html_url":"https://github.com/Morriar","followers_url":"https://api.github.com/users/Morriar/followers","following_url":"https://api.github.com/users/Morriar/following{/other_user}","gists_url":"https://api.github.com/users/Morriar/gists{/gist_id}","starred_url":"https://api.github.com/users/Morriar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Morriar/subscriptions","organizations_url":"https://api.github.com/users/Morriar/orgs","repos_url":"https://api.github.com/users/Morriar/repos","events_url":"https://api.github.com/users/Morriar/events{/privacy}","received_events_url":"https://api.github.com/users/Morriar/received_events","type":"User","site_admin":false}],"milestone":null,"comments":0,"created_at":"2017-06-15T21:53:39Z","updated_at":"2017-06-15T21:54:05Z","closed_at":null,"author_association":"MEMBER","body":"Some potential features,\r\n\r\n* use the connected user (or ask him to login)\r\n* use a template (pre-filled issue & title)\r\n* ask to add a screenshot\r\n* invitation the nitweb url\r\n* add the nitweb label\r\n"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2461","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2461/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2461/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2461/events","html_url":"https://github.com/nitlang/nit/issues/2461","id":230753587,"node_id":"MDU6SXNzdWUyMzA3NTM1ODc=","number":2461,"title":"Add Unicode escaping ","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"R4PaSs","id":1444825,"node_id":"MDQ6VXNlcjE0NDQ4MjU=","avatar_url":"https://avatars3.githubusercontent.com/u/1444825?v=4","gravatar_id":"","url":"https://api.github.com/users/R4PaSs","html_url":"https://github.com/R4PaSs","followers_url":"https://api.github.com/users/R4PaSs/followers","following_url":"https://api.github.com/users/R4PaSs/following{/other_user}","gists_url":"https://api.github.com/users/R4PaSs/gists{/gist_id}","starred_url":"https://api.github.com/users/R4PaSs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/R4PaSs/subscriptions","organizations_url":"https://api.github.com/users/R4PaSs/orgs","repos_url":"https://api.github.com/users/R4PaSs/repos","events_url":"https://api.github.com/users/R4PaSs/events{/privacy}","received_events_url":"https://api.github.com/users/R4PaSs/received_events","type":"User","site_admin":false},"assignees":[{"login":"R4PaSs","id":1444825,"node_id":"MDQ6VXNlcjE0NDQ4MjU=","avatar_url":"https://avatars3.githubusercontent.com/u/1444825?v=4","gravatar_id":"","url":"https://api.github.com/users/R4PaSs","html_url":"https://github.com/R4PaSs","followers_url":"https://api.github.com/users/R4PaSs/followers","following_url":"https://api.github.com/users/R4PaSs/following{/other_user}","gists_url":"https://api.github.com/users/R4PaSs/gists{/gist_id}","starred_url":"https://api.github.com/users/R4PaSs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/R4PaSs/subscriptions","organizations_url":"https://api.github.com/users/R4PaSs/orgs","repos_url":"https://api.github.com/users/R4PaSs/repos","events_url":"https://api.github.com/users/R4PaSs/events{/privacy}","received_events_url":"https://api.github.com/users/R4PaSs/received_events","type":"User","site_admin":false}],"milestone":null,"comments":6,"created_at":"2017-05-23T15:37:35Z","updated_at":"2017-05-25T16:19:36Z","closed_at":null,"author_association":"MEMBER","body":"Nit should have literal Unicode escape sequence `\\u008B` and `\\U0000080B` added in `escape_to_nit` and `unescape_nit`. I assume the change in the lib will be automatically used by the Nit compiler and tools\r\n\r\nhttps://github.com/nitlang/nit/pull/2459#discussion_r118020201"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2433","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2433/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2433/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2433/events","html_url":"https://github.com/nitlang/nit/pull/2433","id":228086103,"node_id":"MDExOlB1bGxSZXF1ZXN0MTIwMTc1NTIy","number":2433,"title":"A simple quick-and-dirty poor man's object inspector.","user":{"login":"privat","id":135828,"node_id":"MDQ6VXNlcjEzNTgyOA==","avatar_url":"https://avatars1.githubusercontent.com/u/135828?v=4","gravatar_id":"","url":"https://api.github.com/users/privat","html_url":"https://github.com/privat","followers_url":"https://api.github.com/users/privat/followers","following_url":"https://api.github.com/users/privat/following{/other_user}","gists_url":"https://api.github.com/users/privat/gists{/gist_id}","starred_url":"https://api.github.com/users/privat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/privat/subscriptions","organizations_url":"https://api.github.com/users/privat/orgs","repos_url":"https://api.github.com/users/privat/repos","events_url":"https://api.github.com/users/privat/events{/privacy}","received_events_url":"https://api.github.com/users/privat/received_events","type":"User","site_admin":false},"labels":[{"id":81916044,"node_id":"MDU6TGFiZWw4MTkxNjA0NA==","url":"https://api.github.com/repos/nitlang/nit/labels/need_work","name":"need_work","color":"e11d21","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2017-05-11T18:48:01Z","updated_at":"2017-05-16T13:02:12Z","closed_at":null,"author_association":"MEMBER","pull_request":{"url":"https://api.github.com/repos/nitlang/nit/pulls/2433","html_url":"https://github.com/nitlang/nit/pull/2433","diff_url":"https://github.com/nitlang/nit/pull/2433.diff","patch_url":"https://github.com/nitlang/nit/pull/2433.patch"},"body":"Since Nit does not have introspection facilities, this module uses the serialization framework to inspect objects.\r\nA plain webserver is used to present the inspection interface.\r\nFeature:\r\n\r\nTo launch the object inspector, just call `Serializable::http_inspect`.\r\n~~~nit\r\nimport serialization\r\nClass A\r\n  serialize\r\n  var name: String\r\nend\r\nclass B\r\n  serialize\r\n  var data: Int\r\n  var a: A\r\nend\r\nvar a = new A(\"my_a\")\r\nvar b = new B(42, a)\r\nb.http_inspect\r\n~~~\r\n\r\nAnti-features:\r\n\r\n* only serialized things from Serializable objects are exposed.\r\n* crappy UI (plain HTML 2.0)\r\n* crappy UI invocation (web server on localhost:8080 then `xdg-open http://localhost:8080`)\r\n* no clean terminaison (just Ctrl-C)"},{"url":"https://api.github.com/repos/nitlang/nit/issues/2430","repository_url":"https://api.github.com/repos/nitlang/nit","labels_url":"https://api.github.com/repos/nitlang/nit/issues/2430/labels{/name}","comments_url":"https://api.github.com/repos/nitlang/nit/issues/2430/comments","events_url":"https://api.github.com/repos/nitlang/nit/issues/2430/events","html_url":"https://github.com/nitlang/nit/issues/2430","id":227459534,"node_id":"MDU6SXNzdWUyMjc0NTk1MzQ=","number":2430,"title":"fixed_ints: Int32 division crash on overflow with niti","user":{"login":"PatrickBlanchette","id":10556389,"node_id":"MDQ6VXNlcjEwNTU2Mzg5","avatar_url":"https://avatars2.githubusercontent.com/u/10556389?v=4","gravatar_id":"","url":"https://api.github.com/users/PatrickBlanchette","html_url":"https://github.com/PatrickBlanchette","followers_url":"https://api.github.com/users/PatrickBlanchette/followers","following_url":"https://api.github.com/users/PatrickBlanchette/following{/other_user}","gists_url":"https://api.github.com/users/PatrickBlanchette/gists{/gist_id}","starred_url":"https://api.github.com/users/PatrickBlanchette/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PatrickBlanchette/subscriptions","organizations_url":"https://api.github.com/users/PatrickBlanchette/orgs","repos_url":"https://api.github.com/users/PatrickBlanchette/repos","events_url":"https://api.github.com/users/PatrickBlanchette/events{/privacy}","received_events_url":"https://api.github.com/users/PatrickBlanchette/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2017-05-09T18:40:06Z","updated_at":"2017-11-12T12:51:58Z","closed_at":null,"author_association":"CONTRIBUTOR","body":"I got an intern crash on that classic test for overflow.\r\n\r\n`print( (-2147483647i32 - 1i32) / -1i32 )`"}]
