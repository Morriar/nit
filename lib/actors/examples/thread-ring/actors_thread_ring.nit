		# This file is generated by nitactors (threaded version)
		# Do not modify, instead use the generated services.
		module actors_thread_ring is
	no_warning("missing-doc")
end

import thread_ring

####################### Redef classes #########################
redef class ThreadRing
redef var async is lazy do return new ProxyThreadRing.proxy(self)
end



####################### Actor classes #########################
class ActorThreadRing
	super Actor
	redef type E: nullable ThreadRing
end



####################### Messages classes ######################
class MessageThreadRing
	super Message
	redef type E: ThreadRing
end



class ThreadRingMessageid
	super MessageThreadRing

	var ret = new Future[Int]

	redef fun invoke(instance) do ret.set_value(instance.id)
end



class ThreadRingMessagenext
	super MessageThreadRing

	var ret = new Future[ThreadRing]

	redef fun invoke(instance) do ret.set_value(instance.next)
end



class ThreadRingMessagesend_token
	super MessageThreadRing

	var message: Int

	redef fun invoke(instance) do instance.send_token(message)
end



####################### Proxy classes #########################
redef class ProxyThreadRing

	redef type E: ActorThreadRing
	#var actor: ActorThreadRing is noinit

	init proxy(base_class: ThreadRing) do
		actor = new ActorThreadRing(base_class)
		actor.start
	end

	redef fun id: Future[Int] do
	var msg = new ThreadRingMessageid
	actor.mailbox.push(msg)
	return msg.ret
end


redef fun next: Future[ThreadRing] do
	var msg = new ThreadRingMessagenext
	actor.mailbox.push(msg)
	return msg.ret
end


redef fun send_token(message: Int) do
	var msg = new ThreadRingMessagesend_token(message)
	actor.mailbox.push(msg)
	
end

end



