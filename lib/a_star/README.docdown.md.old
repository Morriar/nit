# `a_star` - A* pathfinding in graphs

[[toc: a_star]]

A single graph may have different properties according to the `PathContext` used

Usage:

~~~
# Weighted graph (letters are nodes, digits are weights):
#
#     a -2- b
#    /     /
#   3     1
#  /     /
# c -3- d -8- e
#
var graph = new Graph[Node,WeightedLink]

var na = new Node(graph)
var nb = new Node(graph)
var nc = new Node(graph)
var nd = new Node(graph)
var ne = new Node(graph)

var lab = new WeightedLink(graph, na, nb, 2)
var lac = new WeightedLink(graph, na, nc, 3)
var lbd = new WeightedLink(graph, nb, nd, 1)
var lcd = new WeightedLink(graph, nc, nd, 3)
var lde = new WeightedLink(graph, nd, ne, 8)

var context = new WeightedPathContext(graph)

var path = na.path_to(ne, 100, context)
assert path != null else print "No possible path"

assert path.step == nb
assert path.step == nd
assert path.step == ne
assert path.at_end_of_path
~~~

## Classes from `a_star`

[[features: a_star::a_star | mentities: a_star::Node;a_star::Link;a_star::Graph;a_star::AStarPath;a_star::PathContext;a_star::ConstantPathContext;a_star::WeightedPathContext;a_star::WeightedLink;a_star::TargetCondition]]

## Running the tests

Run the nitunit automated tests with the following command:

[[testing: a_star]]

## Authors

This project is maintained by [[ini-maintainer: a_star]].
