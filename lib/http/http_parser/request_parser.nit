# Parser generated by nitcc for the grammar request
module request_parser is generated, no_warning("missing-doc","old-init")
import nitcc_runtime
class Parser_request
	super Parser
	redef fun start_state do return state_Start
end
private fun state_Start: LRStateStart do return once new LRStateStart
private fun state_request: LRStaterequest do return once new LRStaterequest
private fun state_method: LRStatemethod do return once new LRStatemethod
private fun state_request_32dEof: LRStaterequest_32dEof do return once new LRStaterequest_32dEof
private fun state_method_32dsp_43d: LRStatemethod_32dsp_43d do return once new LRStatemethod_32dsp_43d
private fun state_method_32dsp: LRStatemethod_32dsp do return once new LRStatemethod_32dsp
private fun state_method_32dsp_43d_32duri: LRStatemethod_32dsp_43d_32duri do return once new LRStatemethod_32dsp_43d_32duri
private fun state_method_32dsp_43d_32dsp: LRStatemethod_32dsp_43d_32dsp do return once new LRStatemethod_32dsp_43d_32dsp
private fun state_method_32dsp_43d_32duri_32dsp_43d: LRStatemethod_32dsp_43d_32duri_32dsp_43d do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dstring: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dstring do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dstring
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dheader: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dheader do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dheader
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_name: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_name do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_name
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf_32dheader: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf_32dheader do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf_32dheader
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d_32dfield: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d_32dfield do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d_32dfield
private fun state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d_32dfield_name: LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d_32dfield_name do return once new LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d_32dfield_name
private fun goto_Nrequest: Goto_Nrequest do return once new Goto_Nrequest
private fun reduce_Nrequest_95d0(parser: Parser) do
		# REDUCE request::request_0=method sp+ uri sp+ version sp+ cr lf header
		var n8 = parser.pop.as(Nheader)
		var n7 = parser.pop.as(Nlf)
		var n6 = parser.pop.as(Ncr)
		var n5 = parser.pop.as(Nodes[Nsp])
		var n4 = parser.pop.as(Nversion)
		var n3 = parser.pop.as(Nodes[Nsp])
		var n2 = parser.pop.as(Nuri)
		var n1 = parser.pop.as(Nodes[Nsp])
		var n0 = parser.pop.as(Nmethod)
		var p1 = new Nrequest(n0, n1, n2, n3, n4, n5, n6, n7, n8)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nrequest)
end
private fun reduce_Nrequest_95d1(parser: Parser) do
		# REDUCE request::request_1=method sp+ uri sp+ version cr lf header
		var n7 = parser.pop.as(Nheader)
		var n6 = parser.pop.as(Nlf)
		var n5 = parser.pop.as(Ncr)
		var n4 = parser.pop.as(Nversion)
		var n3 = parser.pop.as(Nodes[Nsp])
		var n2 = parser.pop.as(Nuri)
		var n1 = parser.pop.as(Nodes[Nsp])
		var n0 = parser.pop.as(Nmethod)
		var p1 = new Nrequest(n0, n1, n2, n3, n4, null, n5, n6, n7)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nrequest)
end
private fun reduce_Nrequest_95d2(parser: Parser) do
		# REDUCE request::request_2=method sp+ uri sp+ version sp+ cr lf
		var n7 = parser.pop.as(Nlf)
		var n6 = parser.pop.as(Ncr)
		var n5 = parser.pop.as(Nodes[Nsp])
		var n4 = parser.pop.as(Nversion)
		var n3 = parser.pop.as(Nodes[Nsp])
		var n2 = parser.pop.as(Nuri)
		var n1 = parser.pop.as(Nodes[Nsp])
		var n0 = parser.pop.as(Nmethod)
		var p1 = new Nrequest(n0, n1, n2, n3, n4, n5, n6, n7, null)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nrequest)
end
private fun reduce_Nrequest_95d3(parser: Parser) do
		# REDUCE request::request_3=method sp+ uri sp+ version cr lf
		var n6 = parser.pop.as(Nlf)
		var n5 = parser.pop.as(Ncr)
		var n4 = parser.pop.as(Nversion)
		var n3 = parser.pop.as(Nodes[Nsp])
		var n2 = parser.pop.as(Nuri)
		var n1 = parser.pop.as(Nodes[Nsp])
		var n0 = parser.pop.as(Nmethod)
		var p1 = new Nrequest(n0, n1, n2, n3, n4, null, n5, n6, null)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nrequest)
end
private fun goto_Nversion: Goto_Nversion do return once new Goto_Nversion
private fun reduce_Nversion(parser: Parser) do
		# REDUCE version::version=string
		var n0 = parser.pop.as(Nstring)
		var p1 = new Nversion(n0)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nversion)
end
private fun goto_Nheader: Goto_Nheader do return once new Goto_Nheader
private fun reduce_Nheader(parser: Parser) do
		# REDUCE header::header=field+
		var n0 = parser.pop.as(Nodes[Nfield])
		var p1 = new Nheader(n0)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nheader)
end
private fun goto_Nfield: Goto_Nfield do return once new Goto_Nfield
private fun reduce_Nfield_95d0(parser: Parser) do
		# REDUCE field::field_0=sp+ field_name
		var n1 = parser.pop.as(Nfield_name)
		var n0 = parser.pop.as(Nodes[Nsp])
		var p1 = new Nfield(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nfield)
end
private fun reduce_Nfield_95d1(parser: Parser) do
		# REDUCE field::field_1=field_name
		var n0 = parser.pop.as(Nfield_name)
		var p1 = new Nfield(null, n0)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nfield)
end
private fun goto_Nvalue: Goto_Nvalue do return once new Goto_Nvalue
private fun reduce_Nvalue(parser: Parser) do
		# REDUCE value::value=string
		var n0 = parser.pop.as(Nstring)
		var p1 = new Nvalue(n0)
		var prod = p1
		parser.node_stack.push prod
		parser.goto(goto_Nvalue)
end
private fun goto_Nsp_43d: Goto_Nsp_43d do return once new Goto_Nsp_43d
private fun reduce_Nsp_43d_one(parser: Parser) do
		# REDUCE sp+::sp+_one=sp
		var n0 = parser.pop.as(Nsp)
		var prod = new Nodes[Nsp]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Nsp_43d)
end
private fun reduce_Nsp_43d_more(parser: Parser) do
		# REDUCE sp+::sp+_more=sp+ sp
		var n1 = parser.pop.as(Nsp)
		var n0 = parser.pop.as(Nodes[Nsp])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Nsp_43d)
end
private fun goto_Nfield_43d: Goto_Nfield_43d do return once new Goto_Nfield_43d
private fun reduce_Nfield_43d_one(parser: Parser) do
		# REDUCE field+::field+_one=field
		var n0 = parser.pop.as(Nfield)
		var prod = new Nodes[Nfield]
		prod.children.add(n0)
		parser.node_stack.push prod
		parser.goto(goto_Nfield_43d)
end
private fun reduce_Nfield_43d_more(parser: Parser) do
		# REDUCE field+::field+_more=field+ field
		var n1 = parser.pop.as(Nfield)
		var n0 = parser.pop.as(Nodes[Nfield])
		var prod = n0
		n0.children.add(n1)
		parser.node_stack.push prod
		parser.goto(goto_Nfield_43d)
end
private fun goto_N_start: Goto_N_start do return once new Goto_N_start
private fun reduce_NStart(parser: Parser) do
		# REDUCE _start::Start=request Eof
		var n1 = parser.pop.as(NEof)
		var n0 = parser.pop.as(Nrequest)
		var p1 = new NStart(n0, n1)
		var prod = p1
		parser.node_stack.push prod
		parser.stop = true
end
redef class NToken
	# guarded action for state Start
	# 1 shift(s) and 0 reduce(s)
	private fun action_sStart(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state request
	# 1 shift(s) and 0 reduce(s)
	private fun action_srequest(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method
	# 1 shift(s) and 0 reduce(s)
	private fun action_smethod(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+
	# 2 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+ uri
	# 1 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d_32duri(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+ uri sp+
	# 2 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+ uri sp+ version
	# 2 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+ uri sp+ version sp+
	# 2 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+ uri sp+ version cr
	# 1 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+ uri sp+ version sp+ cr
	# 1 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr(parser: Parser) do
		parser.parse_error
	end
	# guarded action for state method sp+ uri sp+ version cr lf
	# 2 shift(s) and 1 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser: Parser) do
		reduce_Nrequest_95d3(parser)
	end
	# guarded action for state method sp+ uri sp+ version sp+ cr lf
	# 2 shift(s) and 1 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser: Parser) do
		reduce_Nrequest_95d2(parser)
	end
	# guarded action for state method sp+ uri sp+ version cr lf field+
	# 2 shift(s) and 1 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser: Parser) do
		reduce_Nheader(parser)
	end
	# guarded action for state method sp+ uri sp+ version cr lf sp+
	# 2 shift(s) and 0 reduce(s)
	private fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d(parser: Parser) do
		parser.parse_error
	end
end
class Nmethod
	super NToken
	redef fun action_sStart(parser) do
		parser.shift(state_method)
	end
	redef fun node_name do return "method"
end
class Nsp
	super NToken
	redef fun action_smethod(parser) do
		parser.shift(state_method_32dsp)
	end
	redef fun action_smethod_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri(parser) do
		parser.shift(state_method_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion(parser) do
		parser.shift(state_method_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser) do
		parser.shift(state_method_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser) do
		parser.shift(state_method_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser) do
		parser.shift(state_method_32dsp)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32dsp)
	end
	redef fun node_name do return "sp"
end
class Nuri
	super NToken
	redef fun action_smethod_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32duri)
	end
	redef fun node_name do return "uri"
end
class Ncr
	super NToken
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr)
	end
	redef fun node_name do return "cr"
end
class Nlf
	super NToken
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf)
	end
	redef fun node_name do return "lf"
end
class Nstring
	super NToken
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dstring)
	end
	redef fun node_name do return "string"
end
class Nfield_name
	super NToken
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_name)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_name)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_name)
	end
	redef fun action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d(parser) do
		parser.shift(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d_32dfield_name)
	end
	redef fun node_name do return "field_name"
end
redef class NEof
	super NToken
	redef fun action_srequest(parser) do
		parser.shift(state_request_32dEof)
	end
	redef fun node_name do return "Eof"
end
redef class LRGoto
	private fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser: Parser) do abort
	private fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser: Parser) do abort
	private fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser: Parser) do abort
end
class Goto_Nrequest
	super LRGoto
end
class Goto_Nversion
	super LRGoto
end
class Goto_Nheader
	super LRGoto
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dheader)
	end
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf_32dheader)
	end
end
class Goto_Nfield
	super LRGoto
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield)
	end
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield)
	end
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d_32dfield)
	end
end
class Goto_Nvalue
	super LRGoto
end
class Goto_Nsp_43d
	super LRGoto
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d)
	end
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d)
	end
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d)
	end
end
class Goto_Nfield_43d
	super LRGoto
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d)
	end
	redef fun goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d)
	end
end
class Goto_N_start
	super LRGoto
end
class Nrequest
	super NProd
	redef fun node_name do return "request"
	var n_method: Nmethod
	var n_sp: Nodes[Nsp]
	var n_uri: Nuri
	var n_sp2: Nodes[Nsp]
	var n_version: Nversion
	var n_sp3: nullable Nodes[Nsp]
	var n_cr: Ncr
	var n_lf: Nlf
	var n_header: nullable Nheader
	init(n_method: Nmethod, n_sp: Nodes[Nsp], n_uri: Nuri, n_sp2: Nodes[Nsp], n_version: Nversion, n_sp3: nullable Nodes[Nsp], n_cr: Ncr, n_lf: Nlf, n_header: nullable Nheader) do
		self.n_method = n_method
		self.n_sp = n_sp
		self.n_uri = n_uri
		self.n_sp2 = n_sp2
		self.n_version = n_version
		self.n_sp3 = n_sp3
		self.n_cr = n_cr
		self.n_lf = n_lf
		self.n_header = n_header
	end
	redef fun number_of_children do return 9
	redef fun child(i) do
		if i == 0 then return n_method
		if i == 1 then return n_sp
		if i == 2 then return n_uri
		if i == 3 then return n_sp2
		if i == 4 then return n_version
		if i == 5 then return n_sp3
		if i == 6 then return n_cr
		if i == 7 then return n_lf
		if i == 8 then return n_header
		abort
	end
end
class Nversion
	super NProd
	redef fun node_name do return "version"
	var n_string: Nstring
	init(n_string: Nstring) do
		self.n_string = n_string
	end
	redef fun number_of_children do return 1
	redef fun child(i) do
		if i == 0 then return n_string
		abort
	end
end
class Nheader
	super NProd
	redef fun node_name do return "header"
	var n_field: Nodes[Nfield]
	init(n_field: Nodes[Nfield]) do
		self.n_field = n_field
	end
	redef fun number_of_children do return 1
	redef fun child(i) do
		if i == 0 then return n_field
		abort
	end
end
class Nfield
	super NProd
	redef fun node_name do return "field"
	var n_sp: nullable Nodes[Nsp]
	var n_field_name: Nfield_name
	init(n_sp: nullable Nodes[Nsp], n_field_name: Nfield_name) do
		self.n_sp = n_sp
		self.n_field_name = n_field_name
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_sp
		if i == 1 then return n_field_name
		abort
	end
end
class Nvalue
	super NProd
	redef fun node_name do return "value"
	var n_string: Nstring
	init(n_string: Nstring) do
		self.n_string = n_string
	end
	redef fun number_of_children do return 1
	redef fun child(i) do
		if i == 0 then return n_string
		abort
	end
end
class N_start
	super NProd
	redef fun node_name do return "_start"
end
class NStart
	super N_start
	redef fun node_name do return "Start"
	var n_0: Nrequest
	var n_1: NEof
	init(n_0: Nrequest, n_1: NEof) do
		self.n_0 = n_0
		self.n_1 = n_1
	end
	redef fun number_of_children do return 2
	redef fun child(i) do
		if i == 0 then return n_0
		if i == 1 then return n_1
		abort
	end
end
# State Start
private class LRStateStart
	super LRState
	redef fun to_s do return "Start"
	redef fun error_msg do return "request"
	redef fun action(parser) do
		parser.peek_token.action_sStart(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_request)
	end
end
# State request
private class LRStaterequest
	super LRState
	redef fun to_s do return "request"
	redef fun error_msg do return "Eof"
	redef fun action(parser) do
		parser.peek_token.action_srequest(parser)
	end
end
# State method
private class LRStatemethod
	super LRState
	redef fun to_s do return "method"
	redef fun error_msg do return "sp+"
	redef fun action(parser) do
		parser.peek_token.action_smethod(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_method_32dsp_43d)
	end
end
# State request Eof
private class LRStaterequest_32dEof
	super LRState
	redef fun to_s do return "request Eof"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_NStart(parser)
	end
end
# State method sp+
private class LRStatemethod_32dsp_43d
	super LRState
	redef fun to_s do return "method sp+"
	redef fun error_msg do return "uri, sp"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d(parser)
	end
end
# State method sp
private class LRStatemethod_32dsp
	super LRState
	redef fun to_s do return "method sp"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nsp_43d_one(parser)
	end
end
# State method sp+ uri
private class LRStatemethod_32dsp_43d_32duri
	super LRState
	redef fun to_s do return "method sp+ uri"
	redef fun error_msg do return "sp+"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d)
	end
end
# State method sp+ sp
private class LRStatemethod_32dsp_43d_32dsp
	super LRState
	redef fun to_s do return "method sp+ sp"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nsp_43d_more(parser)
	end
end
# State method sp+ uri sp+
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d
	super LRState
	redef fun to_s do return "method sp+ uri sp+"
	redef fun error_msg do return "version"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion)
	end
end
# State method sp+ uri sp+ version
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version"
	redef fun error_msg do return "sp+"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion(parser)
	end
	redef fun goto(parser, goto) do
		parser.push(state_method_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d)
	end
end
# State method sp+ uri sp+ string
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dstring
	super LRState
	redef fun to_s do return "method sp+ uri sp+ string"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nversion(parser)
	end
end
# State method sp+ uri sp+ version sp+
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version sp+"
	redef fun error_msg do return "cr, sp"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d(parser)
	end
end
# State method sp+ uri sp+ version cr
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr"
	redef fun error_msg do return "lf"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr(parser)
	end
end
# State method sp+ uri sp+ version sp+ cr
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version sp+ cr"
	redef fun error_msg do return "lf"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr(parser)
	end
end
# State method sp+ uri sp+ version cr lf
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf"
	redef fun error_msg do return "header, field+, field, sp+"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf(parser)
	end
end
# State method sp+ uri sp+ version sp+ cr lf
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version sp+ cr lf"
	redef fun error_msg do return "header, field+, field, sp+"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf(parser)
	end
end
# State method sp+ uri sp+ version cr lf header
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dheader
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf header"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nrequest_95d1(parser)
	end
end
# State method sp+ uri sp+ version cr lf field+
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf field+"
	redef fun error_msg do return "field, sp+"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser)
	end
	redef fun goto(parser, goto) do
		goto.goto_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d(parser)
	end
end
# State method sp+ uri sp+ version cr lf field
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf field"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nfield_43d_one(parser)
	end
end
# State method sp+ uri sp+ version cr lf sp+
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf sp+"
	redef fun error_msg do return "field_name, sp"
	redef fun action(parser) do
		parser.peek_token.action_smethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d(parser)
	end
end
# State method sp+ uri sp+ version cr lf field_name
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_name
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf field_name"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nfield_95d1(parser)
	end
end
# State method sp+ uri sp+ version sp+ cr lf header
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dsp_43d_32dcr_32dlf_32dheader
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version sp+ cr lf header"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nrequest_95d0(parser)
	end
end
# State method sp+ uri sp+ version cr lf field+ field
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dfield_43d_32dfield
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf field+ field"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nfield_43d_more(parser)
	end
end
# State method sp+ uri sp+ version cr lf sp+ field_name
private class LRStatemethod_32dsp_43d_32duri_32dsp_43d_32dversion_32dcr_32dlf_32dsp_43d_32dfield_name
	super LRState
	redef fun to_s do return "method sp+ uri sp+ version cr lf sp+ field_name"
	redef fun error_msg do return ""
	redef fun action(parser) do
		reduce_Nfield_95d0(parser)
	end
end
